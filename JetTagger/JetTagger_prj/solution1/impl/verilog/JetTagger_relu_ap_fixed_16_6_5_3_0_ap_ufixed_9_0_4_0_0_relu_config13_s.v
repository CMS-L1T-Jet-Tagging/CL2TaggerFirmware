// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module JetTagger_relu_ap_fixed_16_6_5_3_0_ap_ufixed_9_0_4_0_0_relu_config13_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15,
        ap_return_16,
        ap_return_17,
        ap_return_18,
        ap_return_19,
        ap_return_20,
        ap_return_21,
        ap_return_22,
        ap_return_23,
        ap_return_24,
        ap_return_25,
        ap_return_26,
        ap_return_27
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
output  [8:0] ap_return_0;
output  [8:0] ap_return_1;
output  [8:0] ap_return_2;
output  [8:0] ap_return_3;
output  [8:0] ap_return_4;
output  [8:0] ap_return_5;
output  [8:0] ap_return_6;
output  [8:0] ap_return_7;
output  [8:0] ap_return_8;
output  [8:0] ap_return_9;
output  [8:0] ap_return_10;
output  [8:0] ap_return_11;
output  [8:0] ap_return_12;
output  [8:0] ap_return_13;
output  [8:0] ap_return_14;
output  [8:0] ap_return_15;
output  [8:0] ap_return_16;
output  [8:0] ap_return_17;
output  [8:0] ap_return_18;
output  [8:0] ap_return_19;
output  [8:0] ap_return_20;
output  [8:0] ap_return_21;
output  [8:0] ap_return_22;
output  [8:0] ap_return_23;
output  [8:0] ap_return_24;
output  [8:0] ap_return_25;
output  [8:0] ap_return_26;
output  [8:0] ap_return_27;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] ap_return_0;
reg[8:0] ap_return_1;
reg[8:0] ap_return_2;
reg[8:0] ap_return_3;
reg[8:0] ap_return_4;
reg[8:0] ap_return_5;
reg[8:0] ap_return_6;
reg[8:0] ap_return_7;
reg[8:0] ap_return_8;
reg[8:0] ap_return_9;
reg[8:0] ap_return_10;
reg[8:0] ap_return_11;
reg[8:0] ap_return_12;
reg[8:0] ap_return_13;
reg[8:0] ap_return_14;
reg[8:0] ap_return_15;
reg[8:0] ap_return_16;
reg[8:0] ap_return_17;
reg[8:0] ap_return_18;
reg[8:0] ap_return_19;
reg[8:0] ap_return_20;
reg[8:0] ap_return_21;
reg[8:0] ap_return_22;
reg[8:0] ap_return_23;
reg[8:0] ap_return_24;
reg[8:0] ap_return_25;
reg[8:0] ap_return_26;
reg[8:0] ap_return_27;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln45_fu_158_p2;
reg   [0:0] icmp_ln45_reg_2982;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_fu_164_p3;
reg   [0:0] tmp_reg_2987;
wire   [8:0] add_ln46_fu_208_p2;
reg   [8:0] add_ln46_reg_2993;
wire   [0:0] or_ln46_fu_266_p2;
reg   [0:0] or_ln46_reg_3000;
wire   [0:0] and_ln46_2880_fu_278_p2;
reg   [0:0] and_ln46_2880_reg_3006;
wire   [0:0] icmp_ln45_958_fu_288_p2;
reg   [0:0] icmp_ln45_958_reg_3012;
wire   [0:0] tmp_4792_fu_294_p3;
reg   [0:0] tmp_4792_reg_3017;
wire   [8:0] add_ln46_958_fu_338_p2;
reg   [8:0] add_ln46_958_reg_3023;
wire   [0:0] or_ln46_1920_fu_396_p2;
reg   [0:0] or_ln46_1920_reg_3030;
wire   [0:0] and_ln46_2883_fu_408_p2;
reg   [0:0] and_ln46_2883_reg_3036;
wire   [0:0] icmp_ln45_959_fu_418_p2;
reg   [0:0] icmp_ln45_959_reg_3042;
wire   [0:0] tmp_4796_fu_424_p3;
reg   [0:0] tmp_4796_reg_3047;
wire   [8:0] add_ln46_959_fu_468_p2;
reg   [8:0] add_ln46_959_reg_3053;
wire   [0:0] or_ln46_1922_fu_526_p2;
reg   [0:0] or_ln46_1922_reg_3060;
wire   [0:0] and_ln46_2886_fu_538_p2;
reg   [0:0] and_ln46_2886_reg_3066;
wire   [0:0] icmp_ln45_960_fu_548_p2;
reg   [0:0] icmp_ln45_960_reg_3072;
wire   [0:0] tmp_4800_fu_554_p3;
reg   [0:0] tmp_4800_reg_3077;
wire   [8:0] add_ln46_960_fu_598_p2;
reg   [8:0] add_ln46_960_reg_3083;
wire   [0:0] or_ln46_1924_fu_656_p2;
reg   [0:0] or_ln46_1924_reg_3090;
wire   [0:0] and_ln46_2889_fu_668_p2;
reg   [0:0] and_ln46_2889_reg_3096;
wire   [0:0] icmp_ln45_961_fu_678_p2;
reg   [0:0] icmp_ln45_961_reg_3102;
wire   [0:0] tmp_4805_fu_684_p3;
reg   [0:0] tmp_4805_reg_3107;
wire   [8:0] add_ln46_961_fu_728_p2;
reg   [8:0] add_ln46_961_reg_3113;
wire   [0:0] or_ln46_1926_fu_786_p2;
reg   [0:0] or_ln46_1926_reg_3120;
wire   [0:0] and_ln46_2892_fu_798_p2;
reg   [0:0] and_ln46_2892_reg_3126;
wire   [0:0] icmp_ln45_962_fu_808_p2;
reg   [0:0] icmp_ln45_962_reg_3132;
wire   [0:0] tmp_4810_fu_814_p3;
reg   [0:0] tmp_4810_reg_3137;
wire   [8:0] add_ln46_962_fu_858_p2;
reg   [8:0] add_ln46_962_reg_3143;
wire   [0:0] or_ln46_1928_fu_916_p2;
reg   [0:0] or_ln46_1928_reg_3150;
wire   [0:0] and_ln46_2895_fu_928_p2;
reg   [0:0] and_ln46_2895_reg_3156;
wire   [0:0] icmp_ln45_963_fu_938_p2;
reg   [0:0] icmp_ln45_963_reg_3162;
wire   [0:0] tmp_4815_fu_944_p3;
reg   [0:0] tmp_4815_reg_3167;
wire   [8:0] add_ln46_963_fu_988_p2;
reg   [8:0] add_ln46_963_reg_3173;
wire   [0:0] or_ln46_1930_fu_1046_p2;
reg   [0:0] or_ln46_1930_reg_3180;
wire   [0:0] and_ln46_2898_fu_1058_p2;
reg   [0:0] and_ln46_2898_reg_3186;
wire   [0:0] icmp_ln45_964_fu_1068_p2;
reg   [0:0] icmp_ln45_964_reg_3192;
wire   [0:0] tmp_4820_fu_1074_p3;
reg   [0:0] tmp_4820_reg_3197;
wire   [8:0] add_ln46_964_fu_1118_p2;
reg   [8:0] add_ln46_964_reg_3203;
wire   [0:0] or_ln46_1932_fu_1176_p2;
reg   [0:0] or_ln46_1932_reg_3210;
wire   [0:0] and_ln46_2901_fu_1188_p2;
reg   [0:0] and_ln46_2901_reg_3216;
wire   [0:0] icmp_ln45_965_fu_1198_p2;
reg   [0:0] icmp_ln45_965_reg_3222;
wire   [0:0] tmp_4825_fu_1204_p3;
reg   [0:0] tmp_4825_reg_3227;
wire   [8:0] add_ln46_965_fu_1248_p2;
reg   [8:0] add_ln46_965_reg_3233;
wire   [0:0] or_ln46_1934_fu_1306_p2;
reg   [0:0] or_ln46_1934_reg_3240;
wire   [0:0] and_ln46_2904_fu_1318_p2;
reg   [0:0] and_ln46_2904_reg_3246;
wire   [0:0] icmp_ln45_966_fu_1328_p2;
reg   [0:0] icmp_ln45_966_reg_3252;
wire   [0:0] tmp_4830_fu_1334_p3;
reg   [0:0] tmp_4830_reg_3257;
wire   [8:0] add_ln46_966_fu_1378_p2;
reg   [8:0] add_ln46_966_reg_3263;
wire   [0:0] or_ln46_1936_fu_1436_p2;
reg   [0:0] or_ln46_1936_reg_3270;
wire   [0:0] and_ln46_2907_fu_1448_p2;
reg   [0:0] and_ln46_2907_reg_3276;
wire   [0:0] icmp_ln45_967_fu_1458_p2;
reg   [0:0] icmp_ln45_967_reg_3282;
wire   [0:0] tmp_4835_fu_1464_p3;
reg   [0:0] tmp_4835_reg_3287;
wire   [8:0] add_ln46_967_fu_1508_p2;
reg   [8:0] add_ln46_967_reg_3293;
wire   [0:0] or_ln46_1938_fu_1566_p2;
reg   [0:0] or_ln46_1938_reg_3300;
wire   [0:0] and_ln46_2910_fu_1578_p2;
reg   [0:0] and_ln46_2910_reg_3306;
wire   [0:0] icmp_ln45_968_fu_1588_p2;
reg   [0:0] icmp_ln45_968_reg_3312;
wire   [0:0] tmp_4840_fu_1594_p3;
reg   [0:0] tmp_4840_reg_3317;
wire   [8:0] add_ln46_968_fu_1638_p2;
reg   [8:0] add_ln46_968_reg_3323;
wire   [0:0] or_ln46_1940_fu_1696_p2;
reg   [0:0] or_ln46_1940_reg_3330;
wire   [0:0] and_ln46_2913_fu_1708_p2;
reg   [0:0] and_ln46_2913_reg_3336;
wire   [0:0] icmp_ln45_969_fu_1718_p2;
reg   [0:0] icmp_ln45_969_reg_3342;
wire   [0:0] tmp_4845_fu_1724_p3;
reg   [0:0] tmp_4845_reg_3347;
wire   [8:0] add_ln46_969_fu_1768_p2;
reg   [8:0] add_ln46_969_reg_3353;
wire   [0:0] or_ln46_1942_fu_1826_p2;
reg   [0:0] or_ln46_1942_reg_3360;
wire   [0:0] and_ln46_2916_fu_1838_p2;
reg   [0:0] and_ln46_2916_reg_3366;
wire   [0:0] icmp_ln45_970_fu_1848_p2;
reg   [0:0] icmp_ln45_970_reg_3372;
wire   [0:0] tmp_4850_fu_1854_p3;
reg   [0:0] tmp_4850_reg_3377;
wire   [8:0] add_ln46_970_fu_1898_p2;
reg   [8:0] add_ln46_970_reg_3383;
wire   [0:0] or_ln46_1944_fu_1956_p2;
reg   [0:0] or_ln46_1944_reg_3390;
wire   [0:0] and_ln46_2919_fu_1968_p2;
reg   [0:0] and_ln46_2919_reg_3396;
wire    ap_block_pp0_stage0;
wire   [0:0] tmp_4789_fu_182_p3;
wire   [0:0] trunc_ln42_fu_154_p1;
wire   [0:0] and_ln46_fu_198_p2;
wire   [8:0] trunc_ln46_s_fu_172_p4;
wire   [8:0] zext_ln46_1087_fu_204_p1;
wire   [5:0] tmp_4_fu_214_p4;
wire   [0:0] tmp_4791_fu_236_p3;
wire   [0:0] icmp_ln46_1919_fu_230_p2;
wire   [0:0] icmp_ln46_fu_224_p2;
wire   [0:0] tmp_4790_fu_190_p3;
wire   [0:0] select_ln46_fu_250_p3;
wire   [0:0] select_ln46_3873_fu_258_p3;
wire   [0:0] xor_ln46_2400_fu_244_p2;
wire   [0:0] and_ln46_3873_fu_272_p2;
wire   [0:0] tmp_4793_fu_312_p3;
wire   [0:0] trunc_ln42_958_fu_284_p1;
wire   [0:0] and_ln46_2882_fu_328_p2;
wire   [8:0] trunc_ln46_1050_fu_302_p4;
wire   [8:0] zext_ln46_1088_fu_334_p1;
wire   [5:0] tmp_s_fu_344_p4;
wire   [0:0] tmp_4795_fu_366_p3;
wire   [0:0] icmp_ln46_1921_fu_360_p2;
wire   [0:0] icmp_ln46_1920_fu_354_p2;
wire   [0:0] tmp_4794_fu_320_p3;
wire   [0:0] select_ln46_2882_fu_380_p3;
wire   [0:0] select_ln46_3875_fu_388_p3;
wire   [0:0] xor_ln46_2401_fu_374_p2;
wire   [0:0] and_ln46_3875_fu_402_p2;
wire   [0:0] tmp_4797_fu_442_p3;
wire   [0:0] trunc_ln42_959_fu_414_p1;
wire   [0:0] and_ln46_2885_fu_458_p2;
wire   [8:0] trunc_ln46_1051_fu_432_p4;
wire   [8:0] zext_ln46_1091_fu_464_p1;
wire   [5:0] tmp_4788_fu_474_p4;
wire   [0:0] tmp_4799_fu_496_p3;
wire   [0:0] icmp_ln46_1923_fu_490_p2;
wire   [0:0] icmp_ln46_1922_fu_484_p2;
wire   [0:0] tmp_4798_fu_450_p3;
wire   [0:0] select_ln46_2885_fu_510_p3;
wire   [0:0] select_ln46_3877_fu_518_p3;
wire   [0:0] xor_ln46_2402_fu_504_p2;
wire   [0:0] and_ln46_3877_fu_532_p2;
wire   [0:0] tmp_4801_fu_572_p3;
wire   [0:0] trunc_ln42_960_fu_544_p1;
wire   [0:0] and_ln46_2888_fu_588_p2;
wire   [8:0] trunc_ln46_1052_fu_562_p4;
wire   [8:0] zext_ln46_1094_fu_594_p1;
wire   [5:0] tmp_4803_fu_604_p4;
wire   [0:0] tmp_4804_fu_626_p3;
wire   [0:0] icmp_ln46_1925_fu_620_p2;
wire   [0:0] icmp_ln46_1924_fu_614_p2;
wire   [0:0] tmp_4802_fu_580_p3;
wire   [0:0] select_ln46_2888_fu_640_p3;
wire   [0:0] select_ln46_3879_fu_648_p3;
wire   [0:0] xor_ln46_2403_fu_634_p2;
wire   [0:0] and_ln46_3879_fu_662_p2;
wire   [0:0] tmp_4806_fu_702_p3;
wire   [0:0] trunc_ln42_961_fu_674_p1;
wire   [0:0] and_ln46_2891_fu_718_p2;
wire   [8:0] trunc_ln46_1053_fu_692_p4;
wire   [8:0] zext_ln46_1096_fu_724_p1;
wire   [5:0] tmp_4808_fu_734_p4;
wire   [0:0] tmp_4809_fu_756_p3;
wire   [0:0] icmp_ln46_1927_fu_750_p2;
wire   [0:0] icmp_ln46_1926_fu_744_p2;
wire   [0:0] tmp_4807_fu_710_p3;
wire   [0:0] select_ln46_2891_fu_770_p3;
wire   [0:0] select_ln46_3881_fu_778_p3;
wire   [0:0] xor_ln46_2404_fu_764_p2;
wire   [0:0] and_ln46_3881_fu_792_p2;
wire   [0:0] tmp_4811_fu_832_p3;
wire   [0:0] trunc_ln42_962_fu_804_p1;
wire   [0:0] and_ln46_2894_fu_848_p2;
wire   [8:0] trunc_ln46_1054_fu_822_p4;
wire   [8:0] zext_ln46_1098_fu_854_p1;
wire   [5:0] tmp_4813_fu_864_p4;
wire   [0:0] tmp_4814_fu_886_p3;
wire   [0:0] icmp_ln46_1929_fu_880_p2;
wire   [0:0] icmp_ln46_1928_fu_874_p2;
wire   [0:0] tmp_4812_fu_840_p3;
wire   [0:0] select_ln46_2894_fu_900_p3;
wire   [0:0] select_ln46_3883_fu_908_p3;
wire   [0:0] xor_ln46_2405_fu_894_p2;
wire   [0:0] and_ln46_3883_fu_922_p2;
wire   [0:0] tmp_4816_fu_962_p3;
wire   [0:0] trunc_ln42_963_fu_934_p1;
wire   [0:0] and_ln46_2897_fu_978_p2;
wire   [8:0] trunc_ln46_1055_fu_952_p4;
wire   [8:0] zext_ln46_1101_fu_984_p1;
wire   [5:0] tmp_4818_fu_994_p4;
wire   [0:0] tmp_4819_fu_1016_p3;
wire   [0:0] icmp_ln46_1931_fu_1010_p2;
wire   [0:0] icmp_ln46_1930_fu_1004_p2;
wire   [0:0] tmp_4817_fu_970_p3;
wire   [0:0] select_ln46_2897_fu_1030_p3;
wire   [0:0] select_ln46_3885_fu_1038_p3;
wire   [0:0] xor_ln46_2406_fu_1024_p2;
wire   [0:0] and_ln46_3885_fu_1052_p2;
wire   [0:0] tmp_4821_fu_1092_p3;
wire   [0:0] trunc_ln42_964_fu_1064_p1;
wire   [0:0] and_ln46_2900_fu_1108_p2;
wire   [8:0] trunc_ln46_1056_fu_1082_p4;
wire   [8:0] zext_ln46_1104_fu_1114_p1;
wire   [5:0] tmp_4823_fu_1124_p4;
wire   [0:0] tmp_4824_fu_1146_p3;
wire   [0:0] icmp_ln46_1933_fu_1140_p2;
wire   [0:0] icmp_ln46_1932_fu_1134_p2;
wire   [0:0] tmp_4822_fu_1100_p3;
wire   [0:0] select_ln46_2900_fu_1160_p3;
wire   [0:0] select_ln46_3887_fu_1168_p3;
wire   [0:0] xor_ln46_2407_fu_1154_p2;
wire   [0:0] and_ln46_3887_fu_1182_p2;
wire   [0:0] tmp_4826_fu_1222_p3;
wire   [0:0] trunc_ln42_965_fu_1194_p1;
wire   [0:0] and_ln46_2903_fu_1238_p2;
wire   [8:0] trunc_ln46_1057_fu_1212_p4;
wire   [8:0] zext_ln46_1107_fu_1244_p1;
wire   [5:0] tmp_4828_fu_1254_p4;
wire   [0:0] tmp_4829_fu_1276_p3;
wire   [0:0] icmp_ln46_1935_fu_1270_p2;
wire   [0:0] icmp_ln46_1934_fu_1264_p2;
wire   [0:0] tmp_4827_fu_1230_p3;
wire   [0:0] select_ln46_2903_fu_1290_p3;
wire   [0:0] select_ln46_3889_fu_1298_p3;
wire   [0:0] xor_ln46_2408_fu_1284_p2;
wire   [0:0] and_ln46_3889_fu_1312_p2;
wire   [0:0] tmp_4831_fu_1352_p3;
wire   [0:0] trunc_ln42_966_fu_1324_p1;
wire   [0:0] and_ln46_2906_fu_1368_p2;
wire   [8:0] trunc_ln46_1058_fu_1342_p4;
wire   [8:0] zext_ln46_1108_fu_1374_p1;
wire   [5:0] tmp_4833_fu_1384_p4;
wire   [0:0] tmp_4834_fu_1406_p3;
wire   [0:0] icmp_ln46_1937_fu_1400_p2;
wire   [0:0] icmp_ln46_1936_fu_1394_p2;
wire   [0:0] tmp_4832_fu_1360_p3;
wire   [0:0] select_ln46_2906_fu_1420_p3;
wire   [0:0] select_ln46_3891_fu_1428_p3;
wire   [0:0] xor_ln46_2409_fu_1414_p2;
wire   [0:0] and_ln46_3891_fu_1442_p2;
wire   [0:0] tmp_4836_fu_1482_p3;
wire   [0:0] trunc_ln42_967_fu_1454_p1;
wire   [0:0] and_ln46_2909_fu_1498_p2;
wire   [8:0] trunc_ln46_1059_fu_1472_p4;
wire   [8:0] zext_ln46_1110_fu_1504_p1;
wire   [5:0] tmp_4838_fu_1514_p4;
wire   [0:0] tmp_4839_fu_1536_p3;
wire   [0:0] icmp_ln46_1939_fu_1530_p2;
wire   [0:0] icmp_ln46_1938_fu_1524_p2;
wire   [0:0] tmp_4837_fu_1490_p3;
wire   [0:0] select_ln46_2909_fu_1550_p3;
wire   [0:0] select_ln46_3893_fu_1558_p3;
wire   [0:0] xor_ln46_2410_fu_1544_p2;
wire   [0:0] and_ln46_3893_fu_1572_p2;
wire   [0:0] tmp_4841_fu_1612_p3;
wire   [0:0] trunc_ln42_968_fu_1584_p1;
wire   [0:0] and_ln46_2912_fu_1628_p2;
wire   [8:0] trunc_ln46_1060_fu_1602_p4;
wire   [8:0] zext_ln46_1112_fu_1634_p1;
wire   [5:0] tmp_4843_fu_1644_p4;
wire   [0:0] tmp_4844_fu_1666_p3;
wire   [0:0] icmp_ln46_1941_fu_1660_p2;
wire   [0:0] icmp_ln46_1940_fu_1654_p2;
wire   [0:0] tmp_4842_fu_1620_p3;
wire   [0:0] select_ln46_2912_fu_1680_p3;
wire   [0:0] select_ln46_3895_fu_1688_p3;
wire   [0:0] xor_ln46_2411_fu_1674_p2;
wire   [0:0] and_ln46_3895_fu_1702_p2;
wire   [0:0] tmp_4846_fu_1742_p3;
wire   [0:0] trunc_ln42_969_fu_1714_p1;
wire   [0:0] and_ln46_2915_fu_1758_p2;
wire   [8:0] trunc_ln46_1061_fu_1732_p4;
wire   [8:0] zext_ln46_1114_fu_1764_p1;
wire   [5:0] tmp_4848_fu_1774_p4;
wire   [0:0] tmp_4849_fu_1796_p3;
wire   [0:0] icmp_ln46_1943_fu_1790_p2;
wire   [0:0] icmp_ln46_1942_fu_1784_p2;
wire   [0:0] tmp_4847_fu_1750_p3;
wire   [0:0] select_ln46_2915_fu_1810_p3;
wire   [0:0] select_ln46_3897_fu_1818_p3;
wire   [0:0] xor_ln46_2412_fu_1804_p2;
wire   [0:0] and_ln46_3897_fu_1832_p2;
wire   [0:0] tmp_4851_fu_1872_p3;
wire   [0:0] trunc_ln42_970_fu_1844_p1;
wire   [0:0] and_ln46_2918_fu_1888_p2;
wire   [8:0] trunc_ln46_1062_fu_1862_p4;
wire   [8:0] zext_ln46_1115_fu_1894_p1;
wire   [5:0] tmp_4853_fu_1904_p4;
wire   [0:0] tmp_4854_fu_1926_p3;
wire   [0:0] icmp_ln46_1945_fu_1920_p2;
wire   [0:0] icmp_ln46_1944_fu_1914_p2;
wire   [0:0] tmp_4852_fu_1880_p3;
wire   [0:0] select_ln46_2918_fu_1940_p3;
wire   [0:0] select_ln46_3899_fu_1948_p3;
wire   [0:0] xor_ln46_2413_fu_1934_p2;
wire   [0:0] and_ln46_3899_fu_1962_p2;
wire   [0:0] trunc_ln46_fu_1974_p1;
wire   [0:0] and_ln46_2881_fu_1987_p2;
wire   [0:0] xor_ln46_1919_fu_1982_p2;
wire   [0:0] and_ln46_3874_fu_1996_p2;
wire   [0:0] xor_ln46_fu_1977_p2;
wire   [8:0] zext_ln46_fu_1992_p1;
wire   [8:0] select_ln46_3874_fu_2007_p3;
wire   [0:0] or_ln46_1919_fu_2001_p2;
wire   [8:0] select_ln46_2880_fu_2013_p3;
wire   [8:0] select_ln46_2881_fu_2020_p3;
wire   [0:0] trunc_ln46_1565_fu_2034_p1;
wire   [0:0] and_ln46_2884_fu_2047_p2;
wire   [0:0] xor_ln46_1921_fu_2042_p2;
wire   [0:0] and_ln46_3876_fu_2056_p2;
wire   [0:0] xor_ln46_1920_fu_2037_p2;
wire   [8:0] zext_ln46_1567_fu_2052_p1;
wire   [8:0] select_ln46_3876_fu_2067_p3;
wire   [0:0] or_ln46_1921_fu_2061_p2;
wire   [8:0] select_ln46_2883_fu_2073_p3;
wire   [8:0] select_ln46_2884_fu_2080_p3;
wire   [0:0] trunc_ln46_1566_fu_2094_p1;
wire   [0:0] and_ln46_2887_fu_2107_p2;
wire   [0:0] xor_ln46_1923_fu_2102_p2;
wire   [0:0] and_ln46_3878_fu_2116_p2;
wire   [0:0] xor_ln46_1922_fu_2097_p2;
wire   [8:0] zext_ln46_1568_fu_2112_p1;
wire   [8:0] select_ln46_3878_fu_2127_p3;
wire   [0:0] or_ln46_1923_fu_2121_p2;
wire   [8:0] select_ln46_2886_fu_2133_p3;
wire   [8:0] select_ln46_2887_fu_2140_p3;
wire   [0:0] trunc_ln46_1567_fu_2154_p1;
wire   [0:0] and_ln46_2890_fu_2167_p2;
wire   [0:0] xor_ln46_1925_fu_2162_p2;
wire   [0:0] and_ln46_3880_fu_2176_p2;
wire   [0:0] xor_ln46_1924_fu_2157_p2;
wire   [8:0] zext_ln46_1569_fu_2172_p1;
wire   [8:0] select_ln46_3880_fu_2187_p3;
wire   [0:0] or_ln46_1925_fu_2181_p2;
wire   [8:0] select_ln46_2889_fu_2193_p3;
wire   [8:0] select_ln46_2890_fu_2200_p3;
wire   [0:0] trunc_ln46_1568_fu_2214_p1;
wire   [0:0] and_ln46_2893_fu_2227_p2;
wire   [0:0] xor_ln46_1927_fu_2222_p2;
wire   [0:0] and_ln46_3882_fu_2236_p2;
wire   [0:0] xor_ln46_1926_fu_2217_p2;
wire   [8:0] zext_ln46_1570_fu_2232_p1;
wire   [8:0] select_ln46_3882_fu_2247_p3;
wire   [0:0] or_ln46_1927_fu_2241_p2;
wire   [8:0] select_ln46_2892_fu_2253_p3;
wire   [8:0] select_ln46_2893_fu_2260_p3;
wire   [0:0] trunc_ln46_1569_fu_2274_p1;
wire   [0:0] and_ln46_2896_fu_2287_p2;
wire   [0:0] xor_ln46_1929_fu_2282_p2;
wire   [0:0] and_ln46_3884_fu_2296_p2;
wire   [0:0] xor_ln46_1928_fu_2277_p2;
wire   [8:0] zext_ln46_1571_fu_2292_p1;
wire   [8:0] select_ln46_3884_fu_2307_p3;
wire   [0:0] or_ln46_1929_fu_2301_p2;
wire   [8:0] select_ln46_2895_fu_2313_p3;
wire   [8:0] select_ln46_2896_fu_2320_p3;
wire   [0:0] trunc_ln46_1570_fu_2334_p1;
wire   [0:0] and_ln46_2899_fu_2347_p2;
wire   [0:0] xor_ln46_1931_fu_2342_p2;
wire   [0:0] and_ln46_3886_fu_2356_p2;
wire   [0:0] xor_ln46_1930_fu_2337_p2;
wire   [8:0] zext_ln46_1572_fu_2352_p1;
wire   [8:0] select_ln46_3886_fu_2367_p3;
wire   [0:0] or_ln46_1931_fu_2361_p2;
wire   [8:0] select_ln46_2898_fu_2373_p3;
wire   [8:0] select_ln46_2899_fu_2380_p3;
wire   [0:0] trunc_ln46_1571_fu_2394_p1;
wire   [0:0] and_ln46_2902_fu_2407_p2;
wire   [0:0] xor_ln46_1933_fu_2402_p2;
wire   [0:0] and_ln46_3888_fu_2416_p2;
wire   [0:0] xor_ln46_1932_fu_2397_p2;
wire   [8:0] zext_ln46_1573_fu_2412_p1;
wire   [8:0] select_ln46_3888_fu_2427_p3;
wire   [0:0] or_ln46_1933_fu_2421_p2;
wire   [8:0] select_ln46_2901_fu_2433_p3;
wire   [8:0] select_ln46_2902_fu_2440_p3;
wire   [0:0] trunc_ln46_1572_fu_2454_p1;
wire   [0:0] and_ln46_2905_fu_2467_p2;
wire   [0:0] xor_ln46_1935_fu_2462_p2;
wire   [0:0] and_ln46_3890_fu_2476_p2;
wire   [0:0] xor_ln46_1934_fu_2457_p2;
wire   [8:0] zext_ln46_1574_fu_2472_p1;
wire   [8:0] select_ln46_3890_fu_2487_p3;
wire   [0:0] or_ln46_1935_fu_2481_p2;
wire   [8:0] select_ln46_2904_fu_2493_p3;
wire   [8:0] select_ln46_2905_fu_2500_p3;
wire   [0:0] trunc_ln46_1573_fu_2514_p1;
wire   [0:0] and_ln46_2908_fu_2527_p2;
wire   [0:0] xor_ln46_1937_fu_2522_p2;
wire   [0:0] and_ln46_3892_fu_2536_p2;
wire   [0:0] xor_ln46_1936_fu_2517_p2;
wire   [8:0] zext_ln46_1575_fu_2532_p1;
wire   [8:0] select_ln46_3892_fu_2547_p3;
wire   [0:0] or_ln46_1937_fu_2541_p2;
wire   [8:0] select_ln46_2907_fu_2553_p3;
wire   [8:0] select_ln46_2908_fu_2560_p3;
wire   [0:0] trunc_ln46_1574_fu_2574_p1;
wire   [0:0] and_ln46_2911_fu_2587_p2;
wire   [0:0] xor_ln46_1939_fu_2582_p2;
wire   [0:0] and_ln46_3894_fu_2596_p2;
wire   [0:0] xor_ln46_1938_fu_2577_p2;
wire   [8:0] zext_ln46_1576_fu_2592_p1;
wire   [8:0] select_ln46_3894_fu_2607_p3;
wire   [0:0] or_ln46_1939_fu_2601_p2;
wire   [8:0] select_ln46_2910_fu_2613_p3;
wire   [8:0] select_ln46_2911_fu_2620_p3;
wire   [0:0] trunc_ln46_1575_fu_2634_p1;
wire   [0:0] and_ln46_2914_fu_2647_p2;
wire   [0:0] xor_ln46_1941_fu_2642_p2;
wire   [0:0] and_ln46_3896_fu_2656_p2;
wire   [0:0] xor_ln46_1940_fu_2637_p2;
wire   [8:0] zext_ln46_1577_fu_2652_p1;
wire   [8:0] select_ln46_3896_fu_2667_p3;
wire   [0:0] or_ln46_1941_fu_2661_p2;
wire   [8:0] select_ln46_2913_fu_2673_p3;
wire   [8:0] select_ln46_2914_fu_2680_p3;
wire   [0:0] trunc_ln46_1576_fu_2694_p1;
wire   [0:0] and_ln46_2917_fu_2707_p2;
wire   [0:0] xor_ln46_1943_fu_2702_p2;
wire   [0:0] and_ln46_3898_fu_2716_p2;
wire   [0:0] xor_ln46_1942_fu_2697_p2;
wire   [8:0] zext_ln46_1578_fu_2712_p1;
wire   [8:0] select_ln46_3898_fu_2727_p3;
wire   [0:0] or_ln46_1943_fu_2721_p2;
wire   [8:0] select_ln46_2916_fu_2733_p3;
wire   [8:0] select_ln46_2917_fu_2740_p3;
wire   [0:0] trunc_ln46_1577_fu_2754_p1;
wire   [0:0] and_ln46_2920_fu_2767_p2;
wire   [0:0] xor_ln46_1945_fu_2762_p2;
wire   [0:0] and_ln46_3900_fu_2776_p2;
wire   [0:0] xor_ln46_1944_fu_2757_p2;
wire   [8:0] zext_ln46_1579_fu_2772_p1;
wire   [8:0] select_ln46_3900_fu_2787_p3;
wire   [0:0] or_ln46_1945_fu_2781_p2;
wire   [8:0] select_ln46_2919_fu_2793_p3;
wire   [8:0] select_ln46_2920_fu_2800_p3;
wire   [8:0] select_ln45_fu_2027_p3;
wire   [8:0] select_ln45_958_fu_2087_p3;
wire   [8:0] select_ln45_959_fu_2147_p3;
wire   [8:0] select_ln45_960_fu_2207_p3;
wire   [8:0] select_ln45_961_fu_2267_p3;
wire   [8:0] select_ln45_962_fu_2327_p3;
wire   [8:0] select_ln45_963_fu_2387_p3;
wire   [8:0] select_ln45_964_fu_2447_p3;
wire   [8:0] select_ln45_965_fu_2507_p3;
wire   [8:0] select_ln45_966_fu_2567_p3;
wire   [8:0] select_ln45_967_fu_2627_p3;
wire   [8:0] select_ln45_968_fu_2687_p3;
wire   [8:0] select_ln45_969_fu_2747_p3;
wire   [8:0] select_ln45_970_fu_2807_p3;
reg   [8:0] ap_return_0_preg;
reg   [8:0] ap_return_1_preg;
reg   [8:0] ap_return_2_preg;
reg   [8:0] ap_return_3_preg;
reg   [8:0] ap_return_4_preg;
reg   [8:0] ap_return_5_preg;
reg   [8:0] ap_return_6_preg;
reg   [8:0] ap_return_7_preg;
reg   [8:0] ap_return_8_preg;
reg   [8:0] ap_return_9_preg;
reg   [8:0] ap_return_10_preg;
reg   [8:0] ap_return_11_preg;
reg   [8:0] ap_return_12_preg;
reg   [8:0] ap_return_13_preg;
reg   [8:0] ap_return_14_preg;
reg   [8:0] ap_return_15_preg;
reg   [8:0] ap_return_16_preg;
reg   [8:0] ap_return_17_preg;
reg   [8:0] ap_return_18_preg;
reg   [8:0] ap_return_19_preg;
reg   [8:0] ap_return_20_preg;
reg   [8:0] ap_return_21_preg;
reg   [8:0] ap_return_22_preg;
reg   [8:0] ap_return_23_preg;
reg   [8:0] ap_return_24_preg;
reg   [8:0] ap_return_25_preg;
reg   [8:0] ap_return_26_preg;
reg   [8:0] ap_return_27_preg;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_return_0_preg = 9'd0;
#0 ap_return_1_preg = 9'd0;
#0 ap_return_2_preg = 9'd0;
#0 ap_return_3_preg = 9'd0;
#0 ap_return_4_preg = 9'd0;
#0 ap_return_5_preg = 9'd0;
#0 ap_return_6_preg = 9'd0;
#0 ap_return_7_preg = 9'd0;
#0 ap_return_8_preg = 9'd0;
#0 ap_return_9_preg = 9'd0;
#0 ap_return_10_preg = 9'd0;
#0 ap_return_11_preg = 9'd0;
#0 ap_return_12_preg = 9'd0;
#0 ap_return_13_preg = 9'd0;
#0 ap_return_14_preg = 9'd0;
#0 ap_return_15_preg = 9'd0;
#0 ap_return_16_preg = 9'd0;
#0 ap_return_17_preg = 9'd0;
#0 ap_return_18_preg = 9'd0;
#0 ap_return_19_preg = 9'd0;
#0 ap_return_20_preg = 9'd0;
#0 ap_return_21_preg = 9'd0;
#0 ap_return_22_preg = 9'd0;
#0 ap_return_23_preg = 9'd0;
#0 ap_return_24_preg = 9'd0;
#0 ap_return_25_preg = 9'd0;
#0 ap_return_26_preg = 9'd0;
#0 ap_return_27_preg = 9'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_0_preg <= select_ln45_fu_2027_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_10_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_10_preg <= select_ln45_962_fu_2327_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_11_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_11_preg <= select_ln45_962_fu_2327_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_12_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_12_preg <= select_ln45_963_fu_2387_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_13_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_13_preg <= select_ln45_963_fu_2387_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_14_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_14_preg <= select_ln45_964_fu_2447_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_15_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_15_preg <= select_ln45_964_fu_2447_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_16_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_16_preg <= select_ln45_965_fu_2507_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_17_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_17_preg <= select_ln45_965_fu_2507_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_18_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_18_preg <= select_ln45_966_fu_2567_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_19_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_19_preg <= select_ln45_966_fu_2567_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_1_preg <= select_ln45_fu_2027_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_20_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_20_preg <= select_ln45_967_fu_2627_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_21_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_21_preg <= select_ln45_967_fu_2627_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_22_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_22_preg <= select_ln45_968_fu_2687_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_23_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_23_preg <= select_ln45_968_fu_2687_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_24_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_24_preg <= select_ln45_969_fu_2747_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_25_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_25_preg <= select_ln45_969_fu_2747_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_26_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_26_preg <= select_ln45_970_fu_2807_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_27_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_27_preg <= select_ln45_970_fu_2807_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_2_preg <= select_ln45_958_fu_2087_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_3_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_3_preg <= select_ln45_958_fu_2087_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_4_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_4_preg <= select_ln45_959_fu_2147_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_5_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_5_preg <= select_ln45_959_fu_2147_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_6_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_6_preg <= select_ln45_960_fu_2207_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_7_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_7_preg <= select_ln45_960_fu_2207_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_8_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_8_preg <= select_ln45_961_fu_2267_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_9_preg <= 9'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_return_9_preg <= select_ln45_961_fu_2267_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln46_958_reg_3023 <= add_ln46_958_fu_338_p2;
        add_ln46_959_reg_3053 <= add_ln46_959_fu_468_p2;
        add_ln46_960_reg_3083 <= add_ln46_960_fu_598_p2;
        add_ln46_961_reg_3113 <= add_ln46_961_fu_728_p2;
        add_ln46_962_reg_3143 <= add_ln46_962_fu_858_p2;
        add_ln46_963_reg_3173 <= add_ln46_963_fu_988_p2;
        add_ln46_964_reg_3203 <= add_ln46_964_fu_1118_p2;
        add_ln46_965_reg_3233 <= add_ln46_965_fu_1248_p2;
        add_ln46_966_reg_3263 <= add_ln46_966_fu_1378_p2;
        add_ln46_967_reg_3293 <= add_ln46_967_fu_1508_p2;
        add_ln46_968_reg_3323 <= add_ln46_968_fu_1638_p2;
        add_ln46_969_reg_3353 <= add_ln46_969_fu_1768_p2;
        add_ln46_970_reg_3383 <= add_ln46_970_fu_1898_p2;
        add_ln46_reg_2993 <= add_ln46_fu_208_p2;
        and_ln46_2880_reg_3006 <= and_ln46_2880_fu_278_p2;
        and_ln46_2883_reg_3036 <= and_ln46_2883_fu_408_p2;
        and_ln46_2886_reg_3066 <= and_ln46_2886_fu_538_p2;
        and_ln46_2889_reg_3096 <= and_ln46_2889_fu_668_p2;
        and_ln46_2892_reg_3126 <= and_ln46_2892_fu_798_p2;
        and_ln46_2895_reg_3156 <= and_ln46_2895_fu_928_p2;
        and_ln46_2898_reg_3186 <= and_ln46_2898_fu_1058_p2;
        and_ln46_2901_reg_3216 <= and_ln46_2901_fu_1188_p2;
        and_ln46_2904_reg_3246 <= and_ln46_2904_fu_1318_p2;
        and_ln46_2907_reg_3276 <= and_ln46_2907_fu_1448_p2;
        and_ln46_2910_reg_3306 <= and_ln46_2910_fu_1578_p2;
        and_ln46_2913_reg_3336 <= and_ln46_2913_fu_1708_p2;
        and_ln46_2916_reg_3366 <= and_ln46_2916_fu_1838_p2;
        and_ln46_2919_reg_3396 <= and_ln46_2919_fu_1968_p2;
        icmp_ln45_958_reg_3012 <= icmp_ln45_958_fu_288_p2;
        icmp_ln45_959_reg_3042 <= icmp_ln45_959_fu_418_p2;
        icmp_ln45_960_reg_3072 <= icmp_ln45_960_fu_548_p2;
        icmp_ln45_961_reg_3102 <= icmp_ln45_961_fu_678_p2;
        icmp_ln45_962_reg_3132 <= icmp_ln45_962_fu_808_p2;
        icmp_ln45_963_reg_3162 <= icmp_ln45_963_fu_938_p2;
        icmp_ln45_964_reg_3192 <= icmp_ln45_964_fu_1068_p2;
        icmp_ln45_965_reg_3222 <= icmp_ln45_965_fu_1198_p2;
        icmp_ln45_966_reg_3252 <= icmp_ln45_966_fu_1328_p2;
        icmp_ln45_967_reg_3282 <= icmp_ln45_967_fu_1458_p2;
        icmp_ln45_968_reg_3312 <= icmp_ln45_968_fu_1588_p2;
        icmp_ln45_969_reg_3342 <= icmp_ln45_969_fu_1718_p2;
        icmp_ln45_970_reg_3372 <= icmp_ln45_970_fu_1848_p2;
        icmp_ln45_reg_2982 <= icmp_ln45_fu_158_p2;
        or_ln46_1920_reg_3030 <= or_ln46_1920_fu_396_p2;
        or_ln46_1922_reg_3060 <= or_ln46_1922_fu_526_p2;
        or_ln46_1924_reg_3090 <= or_ln46_1924_fu_656_p2;
        or_ln46_1926_reg_3120 <= or_ln46_1926_fu_786_p2;
        or_ln46_1928_reg_3150 <= or_ln46_1928_fu_916_p2;
        or_ln46_1930_reg_3180 <= or_ln46_1930_fu_1046_p2;
        or_ln46_1932_reg_3210 <= or_ln46_1932_fu_1176_p2;
        or_ln46_1934_reg_3240 <= or_ln46_1934_fu_1306_p2;
        or_ln46_1936_reg_3270 <= or_ln46_1936_fu_1436_p2;
        or_ln46_1938_reg_3300 <= or_ln46_1938_fu_1566_p2;
        or_ln46_1940_reg_3330 <= or_ln46_1940_fu_1696_p2;
        or_ln46_1942_reg_3360 <= or_ln46_1942_fu_1826_p2;
        or_ln46_1944_reg_3390 <= or_ln46_1944_fu_1956_p2;
        or_ln46_reg_3000 <= or_ln46_fu_266_p2;
        tmp_4792_reg_3017 <= p_read1[32'd15];
        tmp_4796_reg_3047 <= p_read2[32'd15];
        tmp_4800_reg_3077 <= p_read3[32'd15];
        tmp_4805_reg_3107 <= p_read4[32'd15];
        tmp_4810_reg_3137 <= p_read5[32'd15];
        tmp_4815_reg_3167 <= p_read6[32'd15];
        tmp_4820_reg_3197 <= p_read7[32'd15];
        tmp_4825_reg_3227 <= p_read8[32'd15];
        tmp_4830_reg_3257 <= p_read9[32'd15];
        tmp_4835_reg_3287 <= p_read10[32'd15];
        tmp_4840_reg_3317 <= p_read11[32'd15];
        tmp_4845_reg_3347 <= p_read12[32'd15];
        tmp_4850_reg_3377 <= p_read13[32'd15];
        tmp_reg_2987 <= p_read[32'd15];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_0 = select_ln45_fu_2027_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_1 = select_ln45_fu_2027_p3;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_10 = select_ln45_962_fu_2327_p3;
    end else begin
        ap_return_10 = ap_return_10_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_11 = select_ln45_962_fu_2327_p3;
    end else begin
        ap_return_11 = ap_return_11_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_12 = select_ln45_963_fu_2387_p3;
    end else begin
        ap_return_12 = ap_return_12_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_13 = select_ln45_963_fu_2387_p3;
    end else begin
        ap_return_13 = ap_return_13_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_14 = select_ln45_964_fu_2447_p3;
    end else begin
        ap_return_14 = ap_return_14_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_15 = select_ln45_964_fu_2447_p3;
    end else begin
        ap_return_15 = ap_return_15_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_16 = select_ln45_965_fu_2507_p3;
    end else begin
        ap_return_16 = ap_return_16_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_17 = select_ln45_965_fu_2507_p3;
    end else begin
        ap_return_17 = ap_return_17_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_18 = select_ln45_966_fu_2567_p3;
    end else begin
        ap_return_18 = ap_return_18_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_19 = select_ln45_966_fu_2567_p3;
    end else begin
        ap_return_19 = ap_return_19_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_2 = select_ln45_958_fu_2087_p3;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_20 = select_ln45_967_fu_2627_p3;
    end else begin
        ap_return_20 = ap_return_20_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_21 = select_ln45_967_fu_2627_p3;
    end else begin
        ap_return_21 = ap_return_21_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_22 = select_ln45_968_fu_2687_p3;
    end else begin
        ap_return_22 = ap_return_22_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_23 = select_ln45_968_fu_2687_p3;
    end else begin
        ap_return_23 = ap_return_23_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_24 = select_ln45_969_fu_2747_p3;
    end else begin
        ap_return_24 = ap_return_24_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_25 = select_ln45_969_fu_2747_p3;
    end else begin
        ap_return_25 = ap_return_25_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_26 = select_ln45_970_fu_2807_p3;
    end else begin
        ap_return_26 = ap_return_26_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_27 = select_ln45_970_fu_2807_p3;
    end else begin
        ap_return_27 = ap_return_27_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_3 = select_ln45_958_fu_2087_p3;
    end else begin
        ap_return_3 = ap_return_3_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_4 = select_ln45_959_fu_2147_p3;
    end else begin
        ap_return_4 = ap_return_4_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_5 = select_ln45_959_fu_2147_p3;
    end else begin
        ap_return_5 = ap_return_5_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_6 = select_ln45_960_fu_2207_p3;
    end else begin
        ap_return_6 = ap_return_6_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_7 = select_ln45_960_fu_2207_p3;
    end else begin
        ap_return_7 = ap_return_7_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_8 = select_ln45_961_fu_2267_p3;
    end else begin
        ap_return_8 = ap_return_8_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_return_9 = select_ln45_961_fu_2267_p3;
    end else begin
        ap_return_9 = ap_return_9_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln46_958_fu_338_p2 = (trunc_ln46_1050_fu_302_p4 + zext_ln46_1088_fu_334_p1);

assign add_ln46_959_fu_468_p2 = (trunc_ln46_1051_fu_432_p4 + zext_ln46_1091_fu_464_p1);

assign add_ln46_960_fu_598_p2 = (trunc_ln46_1052_fu_562_p4 + zext_ln46_1094_fu_594_p1);

assign add_ln46_961_fu_728_p2 = (trunc_ln46_1053_fu_692_p4 + zext_ln46_1096_fu_724_p1);

assign add_ln46_962_fu_858_p2 = (trunc_ln46_1054_fu_822_p4 + zext_ln46_1098_fu_854_p1);

assign add_ln46_963_fu_988_p2 = (trunc_ln46_1055_fu_952_p4 + zext_ln46_1101_fu_984_p1);

assign add_ln46_964_fu_1118_p2 = (trunc_ln46_1056_fu_1082_p4 + zext_ln46_1104_fu_1114_p1);

assign add_ln46_965_fu_1248_p2 = (trunc_ln46_1057_fu_1212_p4 + zext_ln46_1107_fu_1244_p1);

assign add_ln46_966_fu_1378_p2 = (trunc_ln46_1058_fu_1342_p4 + zext_ln46_1108_fu_1374_p1);

assign add_ln46_967_fu_1508_p2 = (trunc_ln46_1059_fu_1472_p4 + zext_ln46_1110_fu_1504_p1);

assign add_ln46_968_fu_1638_p2 = (trunc_ln46_1060_fu_1602_p4 + zext_ln46_1112_fu_1634_p1);

assign add_ln46_969_fu_1768_p2 = (trunc_ln46_1061_fu_1732_p4 + zext_ln46_1114_fu_1764_p1);

assign add_ln46_970_fu_1898_p2 = (trunc_ln46_1062_fu_1862_p4 + zext_ln46_1115_fu_1894_p1);

assign add_ln46_fu_208_p2 = (trunc_ln46_s_fu_172_p4 + zext_ln46_1087_fu_204_p1);

assign and_ln46_2880_fu_278_p2 = (tmp_4790_fu_190_p3 & and_ln46_3873_fu_272_p2);

assign and_ln46_2881_fu_1987_p2 = (trunc_ln46_fu_1974_p1 & and_ln46_2880_reg_3006);

assign and_ln46_2882_fu_328_p2 = (trunc_ln42_958_fu_284_p1 & tmp_4793_fu_312_p3);

assign and_ln46_2883_fu_408_p2 = (tmp_4794_fu_320_p3 & and_ln46_3875_fu_402_p2);

assign and_ln46_2884_fu_2047_p2 = (trunc_ln46_1565_fu_2034_p1 & and_ln46_2883_reg_3036);

assign and_ln46_2885_fu_458_p2 = (trunc_ln42_959_fu_414_p1 & tmp_4797_fu_442_p3);

assign and_ln46_2886_fu_538_p2 = (tmp_4798_fu_450_p3 & and_ln46_3877_fu_532_p2);

assign and_ln46_2887_fu_2107_p2 = (trunc_ln46_1566_fu_2094_p1 & and_ln46_2886_reg_3066);

assign and_ln46_2888_fu_588_p2 = (trunc_ln42_960_fu_544_p1 & tmp_4801_fu_572_p3);

assign and_ln46_2889_fu_668_p2 = (tmp_4802_fu_580_p3 & and_ln46_3879_fu_662_p2);

assign and_ln46_2890_fu_2167_p2 = (trunc_ln46_1567_fu_2154_p1 & and_ln46_2889_reg_3096);

assign and_ln46_2891_fu_718_p2 = (trunc_ln42_961_fu_674_p1 & tmp_4806_fu_702_p3);

assign and_ln46_2892_fu_798_p2 = (tmp_4807_fu_710_p3 & and_ln46_3881_fu_792_p2);

assign and_ln46_2893_fu_2227_p2 = (trunc_ln46_1568_fu_2214_p1 & and_ln46_2892_reg_3126);

assign and_ln46_2894_fu_848_p2 = (trunc_ln42_962_fu_804_p1 & tmp_4811_fu_832_p3);

assign and_ln46_2895_fu_928_p2 = (tmp_4812_fu_840_p3 & and_ln46_3883_fu_922_p2);

assign and_ln46_2896_fu_2287_p2 = (trunc_ln46_1569_fu_2274_p1 & and_ln46_2895_reg_3156);

assign and_ln46_2897_fu_978_p2 = (trunc_ln42_963_fu_934_p1 & tmp_4816_fu_962_p3);

assign and_ln46_2898_fu_1058_p2 = (tmp_4817_fu_970_p3 & and_ln46_3885_fu_1052_p2);

assign and_ln46_2899_fu_2347_p2 = (trunc_ln46_1570_fu_2334_p1 & and_ln46_2898_reg_3186);

assign and_ln46_2900_fu_1108_p2 = (trunc_ln42_964_fu_1064_p1 & tmp_4821_fu_1092_p3);

assign and_ln46_2901_fu_1188_p2 = (tmp_4822_fu_1100_p3 & and_ln46_3887_fu_1182_p2);

assign and_ln46_2902_fu_2407_p2 = (trunc_ln46_1571_fu_2394_p1 & and_ln46_2901_reg_3216);

assign and_ln46_2903_fu_1238_p2 = (trunc_ln42_965_fu_1194_p1 & tmp_4826_fu_1222_p3);

assign and_ln46_2904_fu_1318_p2 = (tmp_4827_fu_1230_p3 & and_ln46_3889_fu_1312_p2);

assign and_ln46_2905_fu_2467_p2 = (trunc_ln46_1572_fu_2454_p1 & and_ln46_2904_reg_3246);

assign and_ln46_2906_fu_1368_p2 = (trunc_ln42_966_fu_1324_p1 & tmp_4831_fu_1352_p3);

assign and_ln46_2907_fu_1448_p2 = (tmp_4832_fu_1360_p3 & and_ln46_3891_fu_1442_p2);

assign and_ln46_2908_fu_2527_p2 = (trunc_ln46_1573_fu_2514_p1 & and_ln46_2907_reg_3276);

assign and_ln46_2909_fu_1498_p2 = (trunc_ln42_967_fu_1454_p1 & tmp_4836_fu_1482_p3);

assign and_ln46_2910_fu_1578_p2 = (tmp_4837_fu_1490_p3 & and_ln46_3893_fu_1572_p2);

assign and_ln46_2911_fu_2587_p2 = (trunc_ln46_1574_fu_2574_p1 & and_ln46_2910_reg_3306);

assign and_ln46_2912_fu_1628_p2 = (trunc_ln42_968_fu_1584_p1 & tmp_4841_fu_1612_p3);

assign and_ln46_2913_fu_1708_p2 = (tmp_4842_fu_1620_p3 & and_ln46_3895_fu_1702_p2);

assign and_ln46_2914_fu_2647_p2 = (trunc_ln46_1575_fu_2634_p1 & and_ln46_2913_reg_3336);

assign and_ln46_2915_fu_1758_p2 = (trunc_ln42_969_fu_1714_p1 & tmp_4846_fu_1742_p3);

assign and_ln46_2916_fu_1838_p2 = (tmp_4847_fu_1750_p3 & and_ln46_3897_fu_1832_p2);

assign and_ln46_2917_fu_2707_p2 = (trunc_ln46_1576_fu_2694_p1 & and_ln46_2916_reg_3366);

assign and_ln46_2918_fu_1888_p2 = (trunc_ln42_970_fu_1844_p1 & tmp_4851_fu_1872_p3);

assign and_ln46_2919_fu_1968_p2 = (tmp_4852_fu_1880_p3 & and_ln46_3899_fu_1962_p2);

assign and_ln46_2920_fu_2767_p2 = (trunc_ln46_1577_fu_2754_p1 & and_ln46_2919_reg_3396);

assign and_ln46_3873_fu_272_p2 = (xor_ln46_2400_fu_244_p2 & icmp_ln46_fu_224_p2);

assign and_ln46_3874_fu_1996_p2 = (xor_ln46_1919_fu_1982_p2 & tmp_reg_2987);

assign and_ln46_3875_fu_402_p2 = (xor_ln46_2401_fu_374_p2 & icmp_ln46_1920_fu_354_p2);

assign and_ln46_3876_fu_2056_p2 = (xor_ln46_1921_fu_2042_p2 & tmp_4792_reg_3017);

assign and_ln46_3877_fu_532_p2 = (xor_ln46_2402_fu_504_p2 & icmp_ln46_1922_fu_484_p2);

assign and_ln46_3878_fu_2116_p2 = (xor_ln46_1923_fu_2102_p2 & tmp_4796_reg_3047);

assign and_ln46_3879_fu_662_p2 = (xor_ln46_2403_fu_634_p2 & icmp_ln46_1924_fu_614_p2);

assign and_ln46_3880_fu_2176_p2 = (xor_ln46_1925_fu_2162_p2 & tmp_4800_reg_3077);

assign and_ln46_3881_fu_792_p2 = (xor_ln46_2404_fu_764_p2 & icmp_ln46_1926_fu_744_p2);

assign and_ln46_3882_fu_2236_p2 = (xor_ln46_1927_fu_2222_p2 & tmp_4805_reg_3107);

assign and_ln46_3883_fu_922_p2 = (xor_ln46_2405_fu_894_p2 & icmp_ln46_1928_fu_874_p2);

assign and_ln46_3884_fu_2296_p2 = (xor_ln46_1929_fu_2282_p2 & tmp_4810_reg_3137);

assign and_ln46_3885_fu_1052_p2 = (xor_ln46_2406_fu_1024_p2 & icmp_ln46_1930_fu_1004_p2);

assign and_ln46_3886_fu_2356_p2 = (xor_ln46_1931_fu_2342_p2 & tmp_4815_reg_3167);

assign and_ln46_3887_fu_1182_p2 = (xor_ln46_2407_fu_1154_p2 & icmp_ln46_1932_fu_1134_p2);

assign and_ln46_3888_fu_2416_p2 = (xor_ln46_1933_fu_2402_p2 & tmp_4820_reg_3197);

assign and_ln46_3889_fu_1312_p2 = (xor_ln46_2408_fu_1284_p2 & icmp_ln46_1934_fu_1264_p2);

assign and_ln46_3890_fu_2476_p2 = (xor_ln46_1935_fu_2462_p2 & tmp_4825_reg_3227);

assign and_ln46_3891_fu_1442_p2 = (xor_ln46_2409_fu_1414_p2 & icmp_ln46_1936_fu_1394_p2);

assign and_ln46_3892_fu_2536_p2 = (xor_ln46_1937_fu_2522_p2 & tmp_4830_reg_3257);

assign and_ln46_3893_fu_1572_p2 = (xor_ln46_2410_fu_1544_p2 & icmp_ln46_1938_fu_1524_p2);

assign and_ln46_3894_fu_2596_p2 = (xor_ln46_1939_fu_2582_p2 & tmp_4835_reg_3287);

assign and_ln46_3895_fu_1702_p2 = (xor_ln46_2411_fu_1674_p2 & icmp_ln46_1940_fu_1654_p2);

assign and_ln46_3896_fu_2656_p2 = (xor_ln46_1941_fu_2642_p2 & tmp_4840_reg_3317);

assign and_ln46_3897_fu_1832_p2 = (xor_ln46_2412_fu_1804_p2 & icmp_ln46_1942_fu_1784_p2);

assign and_ln46_3898_fu_2716_p2 = (xor_ln46_1943_fu_2702_p2 & tmp_4845_reg_3347);

assign and_ln46_3899_fu_1962_p2 = (xor_ln46_2413_fu_1934_p2 & icmp_ln46_1944_fu_1914_p2);

assign and_ln46_3900_fu_2776_p2 = (xor_ln46_1945_fu_2762_p2 & tmp_4850_reg_3377);

assign and_ln46_fu_198_p2 = (trunc_ln42_fu_154_p1 & tmp_4789_fu_182_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln45_958_fu_288_p2 = (($signed(p_read1) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_959_fu_418_p2 = (($signed(p_read2) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_960_fu_548_p2 = (($signed(p_read3) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_961_fu_678_p2 = (($signed(p_read4) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_962_fu_808_p2 = (($signed(p_read5) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_963_fu_938_p2 = (($signed(p_read6) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_964_fu_1068_p2 = (($signed(p_read7) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_965_fu_1198_p2 = (($signed(p_read8) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_966_fu_1328_p2 = (($signed(p_read9) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_967_fu_1458_p2 = (($signed(p_read10) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_968_fu_1588_p2 = (($signed(p_read11) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_969_fu_1718_p2 = (($signed(p_read12) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_970_fu_1848_p2 = (($signed(p_read13) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_158_p2 = (($signed(p_read) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln46_1919_fu_230_p2 = ((tmp_4_fu_214_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1920_fu_354_p2 = ((tmp_s_fu_344_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1921_fu_360_p2 = ((tmp_s_fu_344_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1922_fu_484_p2 = ((tmp_4788_fu_474_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1923_fu_490_p2 = ((tmp_4788_fu_474_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1924_fu_614_p2 = ((tmp_4803_fu_604_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1925_fu_620_p2 = ((tmp_4803_fu_604_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1926_fu_744_p2 = ((tmp_4808_fu_734_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1927_fu_750_p2 = ((tmp_4808_fu_734_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1928_fu_874_p2 = ((tmp_4813_fu_864_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1929_fu_880_p2 = ((tmp_4813_fu_864_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1930_fu_1004_p2 = ((tmp_4818_fu_994_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1931_fu_1010_p2 = ((tmp_4818_fu_994_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1932_fu_1134_p2 = ((tmp_4823_fu_1124_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1933_fu_1140_p2 = ((tmp_4823_fu_1124_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1934_fu_1264_p2 = ((tmp_4828_fu_1254_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1935_fu_1270_p2 = ((tmp_4828_fu_1254_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1936_fu_1394_p2 = ((tmp_4833_fu_1384_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1937_fu_1400_p2 = ((tmp_4833_fu_1384_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1938_fu_1524_p2 = ((tmp_4838_fu_1514_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1939_fu_1530_p2 = ((tmp_4838_fu_1514_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1940_fu_1654_p2 = ((tmp_4843_fu_1644_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1941_fu_1660_p2 = ((tmp_4843_fu_1644_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1942_fu_1784_p2 = ((tmp_4848_fu_1774_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1943_fu_1790_p2 = ((tmp_4848_fu_1774_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_1944_fu_1914_p2 = ((tmp_4853_fu_1904_p4 == 6'd63) ? 1'b1 : 1'b0);

assign icmp_ln46_1945_fu_1920_p2 = ((tmp_4853_fu_1904_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_224_p2 = ((tmp_4_fu_214_p4 == 6'd63) ? 1'b1 : 1'b0);

assign or_ln46_1919_fu_2001_p2 = (xor_ln46_fu_1977_p2 | and_ln46_3874_fu_1996_p2);

assign or_ln46_1920_fu_396_p2 = (tmp_4792_fu_294_p3 | select_ln46_3875_fu_388_p3);

assign or_ln46_1921_fu_2061_p2 = (xor_ln46_1920_fu_2037_p2 | and_ln46_3876_fu_2056_p2);

assign or_ln46_1922_fu_526_p2 = (tmp_4796_fu_424_p3 | select_ln46_3877_fu_518_p3);

assign or_ln46_1923_fu_2121_p2 = (xor_ln46_1922_fu_2097_p2 | and_ln46_3878_fu_2116_p2);

assign or_ln46_1924_fu_656_p2 = (tmp_4800_fu_554_p3 | select_ln46_3879_fu_648_p3);

assign or_ln46_1925_fu_2181_p2 = (xor_ln46_1924_fu_2157_p2 | and_ln46_3880_fu_2176_p2);

assign or_ln46_1926_fu_786_p2 = (tmp_4805_fu_684_p3 | select_ln46_3881_fu_778_p3);

assign or_ln46_1927_fu_2241_p2 = (xor_ln46_1926_fu_2217_p2 | and_ln46_3882_fu_2236_p2);

assign or_ln46_1928_fu_916_p2 = (tmp_4810_fu_814_p3 | select_ln46_3883_fu_908_p3);

assign or_ln46_1929_fu_2301_p2 = (xor_ln46_1928_fu_2277_p2 | and_ln46_3884_fu_2296_p2);

assign or_ln46_1930_fu_1046_p2 = (tmp_4815_fu_944_p3 | select_ln46_3885_fu_1038_p3);

assign or_ln46_1931_fu_2361_p2 = (xor_ln46_1930_fu_2337_p2 | and_ln46_3886_fu_2356_p2);

assign or_ln46_1932_fu_1176_p2 = (tmp_4820_fu_1074_p3 | select_ln46_3887_fu_1168_p3);

assign or_ln46_1933_fu_2421_p2 = (xor_ln46_1932_fu_2397_p2 | and_ln46_3888_fu_2416_p2);

assign or_ln46_1934_fu_1306_p2 = (tmp_4825_fu_1204_p3 | select_ln46_3889_fu_1298_p3);

assign or_ln46_1935_fu_2481_p2 = (xor_ln46_1934_fu_2457_p2 | and_ln46_3890_fu_2476_p2);

assign or_ln46_1936_fu_1436_p2 = (tmp_4830_fu_1334_p3 | select_ln46_3891_fu_1428_p3);

assign or_ln46_1937_fu_2541_p2 = (xor_ln46_1936_fu_2517_p2 | and_ln46_3892_fu_2536_p2);

assign or_ln46_1938_fu_1566_p2 = (tmp_4835_fu_1464_p3 | select_ln46_3893_fu_1558_p3);

assign or_ln46_1939_fu_2601_p2 = (xor_ln46_1938_fu_2577_p2 | and_ln46_3894_fu_2596_p2);

assign or_ln46_1940_fu_1696_p2 = (tmp_4840_fu_1594_p3 | select_ln46_3895_fu_1688_p3);

assign or_ln46_1941_fu_2661_p2 = (xor_ln46_1940_fu_2637_p2 | and_ln46_3896_fu_2656_p2);

assign or_ln46_1942_fu_1826_p2 = (tmp_4845_fu_1724_p3 | select_ln46_3897_fu_1818_p3);

assign or_ln46_1943_fu_2721_p2 = (xor_ln46_1942_fu_2697_p2 | and_ln46_3898_fu_2716_p2);

assign or_ln46_1944_fu_1956_p2 = (tmp_4850_fu_1854_p3 | select_ln46_3899_fu_1948_p3);

assign or_ln46_1945_fu_2781_p2 = (xor_ln46_1944_fu_2757_p2 | and_ln46_3900_fu_2776_p2);

assign or_ln46_fu_266_p2 = (tmp_fu_164_p3 | select_ln46_3873_fu_258_p3);

assign select_ln45_958_fu_2087_p3 = ((icmp_ln45_958_reg_3012[0:0] == 1'b1) ? select_ln46_2884_fu_2080_p3 : 9'd0);

assign select_ln45_959_fu_2147_p3 = ((icmp_ln45_959_reg_3042[0:0] == 1'b1) ? select_ln46_2887_fu_2140_p3 : 9'd0);

assign select_ln45_960_fu_2207_p3 = ((icmp_ln45_960_reg_3072[0:0] == 1'b1) ? select_ln46_2890_fu_2200_p3 : 9'd0);

assign select_ln45_961_fu_2267_p3 = ((icmp_ln45_961_reg_3102[0:0] == 1'b1) ? select_ln46_2893_fu_2260_p3 : 9'd0);

assign select_ln45_962_fu_2327_p3 = ((icmp_ln45_962_reg_3132[0:0] == 1'b1) ? select_ln46_2896_fu_2320_p3 : 9'd0);

assign select_ln45_963_fu_2387_p3 = ((icmp_ln45_963_reg_3162[0:0] == 1'b1) ? select_ln46_2899_fu_2380_p3 : 9'd0);

assign select_ln45_964_fu_2447_p3 = ((icmp_ln45_964_reg_3192[0:0] == 1'b1) ? select_ln46_2902_fu_2440_p3 : 9'd0);

assign select_ln45_965_fu_2507_p3 = ((icmp_ln45_965_reg_3222[0:0] == 1'b1) ? select_ln46_2905_fu_2500_p3 : 9'd0);

assign select_ln45_966_fu_2567_p3 = ((icmp_ln45_966_reg_3252[0:0] == 1'b1) ? select_ln46_2908_fu_2560_p3 : 9'd0);

assign select_ln45_967_fu_2627_p3 = ((icmp_ln45_967_reg_3282[0:0] == 1'b1) ? select_ln46_2911_fu_2620_p3 : 9'd0);

assign select_ln45_968_fu_2687_p3 = ((icmp_ln45_968_reg_3312[0:0] == 1'b1) ? select_ln46_2914_fu_2680_p3 : 9'd0);

assign select_ln45_969_fu_2747_p3 = ((icmp_ln45_969_reg_3342[0:0] == 1'b1) ? select_ln46_2917_fu_2740_p3 : 9'd0);

assign select_ln45_970_fu_2807_p3 = ((icmp_ln45_970_reg_3372[0:0] == 1'b1) ? select_ln46_2920_fu_2800_p3 : 9'd0);

assign select_ln45_fu_2027_p3 = ((icmp_ln45_reg_2982[0:0] == 1'b1) ? select_ln46_2881_fu_2020_p3 : 9'd0);

assign select_ln46_2880_fu_2013_p3 = ((or_ln46_reg_3000[0:0] == 1'b1) ? select_ln46_3874_fu_2007_p3 : 9'd511);

assign select_ln46_2881_fu_2020_p3 = ((or_ln46_1919_fu_2001_p2[0:0] == 1'b1) ? select_ln46_2880_fu_2013_p3 : add_ln46_reg_2993);

assign select_ln46_2882_fu_380_p3 = ((tmp_4795_fu_366_p3[0:0] == 1'b1) ? icmp_ln46_1921_fu_360_p2 : icmp_ln46_1920_fu_354_p2);

assign select_ln46_2883_fu_2073_p3 = ((or_ln46_1920_reg_3030[0:0] == 1'b1) ? select_ln46_3876_fu_2067_p3 : 9'd511);

assign select_ln46_2884_fu_2080_p3 = ((or_ln46_1921_fu_2061_p2[0:0] == 1'b1) ? select_ln46_2883_fu_2073_p3 : add_ln46_958_reg_3023);

assign select_ln46_2885_fu_510_p3 = ((tmp_4799_fu_496_p3[0:0] == 1'b1) ? icmp_ln46_1923_fu_490_p2 : icmp_ln46_1922_fu_484_p2);

assign select_ln46_2886_fu_2133_p3 = ((or_ln46_1922_reg_3060[0:0] == 1'b1) ? select_ln46_3878_fu_2127_p3 : 9'd511);

assign select_ln46_2887_fu_2140_p3 = ((or_ln46_1923_fu_2121_p2[0:0] == 1'b1) ? select_ln46_2886_fu_2133_p3 : add_ln46_959_reg_3053);

assign select_ln46_2888_fu_640_p3 = ((tmp_4804_fu_626_p3[0:0] == 1'b1) ? icmp_ln46_1925_fu_620_p2 : icmp_ln46_1924_fu_614_p2);

assign select_ln46_2889_fu_2193_p3 = ((or_ln46_1924_reg_3090[0:0] == 1'b1) ? select_ln46_3880_fu_2187_p3 : 9'd511);

assign select_ln46_2890_fu_2200_p3 = ((or_ln46_1925_fu_2181_p2[0:0] == 1'b1) ? select_ln46_2889_fu_2193_p3 : add_ln46_960_reg_3083);

assign select_ln46_2891_fu_770_p3 = ((tmp_4809_fu_756_p3[0:0] == 1'b1) ? icmp_ln46_1927_fu_750_p2 : icmp_ln46_1926_fu_744_p2);

assign select_ln46_2892_fu_2253_p3 = ((or_ln46_1926_reg_3120[0:0] == 1'b1) ? select_ln46_3882_fu_2247_p3 : 9'd511);

assign select_ln46_2893_fu_2260_p3 = ((or_ln46_1927_fu_2241_p2[0:0] == 1'b1) ? select_ln46_2892_fu_2253_p3 : add_ln46_961_reg_3113);

assign select_ln46_2894_fu_900_p3 = ((tmp_4814_fu_886_p3[0:0] == 1'b1) ? icmp_ln46_1929_fu_880_p2 : icmp_ln46_1928_fu_874_p2);

assign select_ln46_2895_fu_2313_p3 = ((or_ln46_1928_reg_3150[0:0] == 1'b1) ? select_ln46_3884_fu_2307_p3 : 9'd511);

assign select_ln46_2896_fu_2320_p3 = ((or_ln46_1929_fu_2301_p2[0:0] == 1'b1) ? select_ln46_2895_fu_2313_p3 : add_ln46_962_reg_3143);

assign select_ln46_2897_fu_1030_p3 = ((tmp_4819_fu_1016_p3[0:0] == 1'b1) ? icmp_ln46_1931_fu_1010_p2 : icmp_ln46_1930_fu_1004_p2);

assign select_ln46_2898_fu_2373_p3 = ((or_ln46_1930_reg_3180[0:0] == 1'b1) ? select_ln46_3886_fu_2367_p3 : 9'd511);

assign select_ln46_2899_fu_2380_p3 = ((or_ln46_1931_fu_2361_p2[0:0] == 1'b1) ? select_ln46_2898_fu_2373_p3 : add_ln46_963_reg_3173);

assign select_ln46_2900_fu_1160_p3 = ((tmp_4824_fu_1146_p3[0:0] == 1'b1) ? icmp_ln46_1933_fu_1140_p2 : icmp_ln46_1932_fu_1134_p2);

assign select_ln46_2901_fu_2433_p3 = ((or_ln46_1932_reg_3210[0:0] == 1'b1) ? select_ln46_3888_fu_2427_p3 : 9'd511);

assign select_ln46_2902_fu_2440_p3 = ((or_ln46_1933_fu_2421_p2[0:0] == 1'b1) ? select_ln46_2901_fu_2433_p3 : add_ln46_964_reg_3203);

assign select_ln46_2903_fu_1290_p3 = ((tmp_4829_fu_1276_p3[0:0] == 1'b1) ? icmp_ln46_1935_fu_1270_p2 : icmp_ln46_1934_fu_1264_p2);

assign select_ln46_2904_fu_2493_p3 = ((or_ln46_1934_reg_3240[0:0] == 1'b1) ? select_ln46_3890_fu_2487_p3 : 9'd511);

assign select_ln46_2905_fu_2500_p3 = ((or_ln46_1935_fu_2481_p2[0:0] == 1'b1) ? select_ln46_2904_fu_2493_p3 : add_ln46_965_reg_3233);

assign select_ln46_2906_fu_1420_p3 = ((tmp_4834_fu_1406_p3[0:0] == 1'b1) ? icmp_ln46_1937_fu_1400_p2 : icmp_ln46_1936_fu_1394_p2);

assign select_ln46_2907_fu_2553_p3 = ((or_ln46_1936_reg_3270[0:0] == 1'b1) ? select_ln46_3892_fu_2547_p3 : 9'd511);

assign select_ln46_2908_fu_2560_p3 = ((or_ln46_1937_fu_2541_p2[0:0] == 1'b1) ? select_ln46_2907_fu_2553_p3 : add_ln46_966_reg_3263);

assign select_ln46_2909_fu_1550_p3 = ((tmp_4839_fu_1536_p3[0:0] == 1'b1) ? icmp_ln46_1939_fu_1530_p2 : icmp_ln46_1938_fu_1524_p2);

assign select_ln46_2910_fu_2613_p3 = ((or_ln46_1938_reg_3300[0:0] == 1'b1) ? select_ln46_3894_fu_2607_p3 : 9'd511);

assign select_ln46_2911_fu_2620_p3 = ((or_ln46_1939_fu_2601_p2[0:0] == 1'b1) ? select_ln46_2910_fu_2613_p3 : add_ln46_967_reg_3293);

assign select_ln46_2912_fu_1680_p3 = ((tmp_4844_fu_1666_p3[0:0] == 1'b1) ? icmp_ln46_1941_fu_1660_p2 : icmp_ln46_1940_fu_1654_p2);

assign select_ln46_2913_fu_2673_p3 = ((or_ln46_1940_reg_3330[0:0] == 1'b1) ? select_ln46_3896_fu_2667_p3 : 9'd511);

assign select_ln46_2914_fu_2680_p3 = ((or_ln46_1941_fu_2661_p2[0:0] == 1'b1) ? select_ln46_2913_fu_2673_p3 : add_ln46_968_reg_3323);

assign select_ln46_2915_fu_1810_p3 = ((tmp_4849_fu_1796_p3[0:0] == 1'b1) ? icmp_ln46_1943_fu_1790_p2 : icmp_ln46_1942_fu_1784_p2);

assign select_ln46_2916_fu_2733_p3 = ((or_ln46_1942_reg_3360[0:0] == 1'b1) ? select_ln46_3898_fu_2727_p3 : 9'd511);

assign select_ln46_2917_fu_2740_p3 = ((or_ln46_1943_fu_2721_p2[0:0] == 1'b1) ? select_ln46_2916_fu_2733_p3 : add_ln46_969_reg_3353);

assign select_ln46_2918_fu_1940_p3 = ((tmp_4854_fu_1926_p3[0:0] == 1'b1) ? icmp_ln46_1945_fu_1920_p2 : icmp_ln46_1944_fu_1914_p2);

assign select_ln46_2919_fu_2793_p3 = ((or_ln46_1944_reg_3390[0:0] == 1'b1) ? select_ln46_3900_fu_2787_p3 : 9'd511);

assign select_ln46_2920_fu_2800_p3 = ((or_ln46_1945_fu_2781_p2[0:0] == 1'b1) ? select_ln46_2919_fu_2793_p3 : add_ln46_970_reg_3383);

assign select_ln46_3873_fu_258_p3 = ((tmp_4790_fu_190_p3[0:0] == 1'b1) ? select_ln46_fu_250_p3 : icmp_ln46_1919_fu_230_p2);

assign select_ln46_3874_fu_2007_p3 = ((tmp_reg_2987[0:0] == 1'b1) ? zext_ln46_fu_1992_p1 : add_ln46_reg_2993);

assign select_ln46_3875_fu_388_p3 = ((tmp_4794_fu_320_p3[0:0] == 1'b1) ? select_ln46_2882_fu_380_p3 : icmp_ln46_1921_fu_360_p2);

assign select_ln46_3876_fu_2067_p3 = ((tmp_4792_reg_3017[0:0] == 1'b1) ? zext_ln46_1567_fu_2052_p1 : add_ln46_958_reg_3023);

assign select_ln46_3877_fu_518_p3 = ((tmp_4798_fu_450_p3[0:0] == 1'b1) ? select_ln46_2885_fu_510_p3 : icmp_ln46_1923_fu_490_p2);

assign select_ln46_3878_fu_2127_p3 = ((tmp_4796_reg_3047[0:0] == 1'b1) ? zext_ln46_1568_fu_2112_p1 : add_ln46_959_reg_3053);

assign select_ln46_3879_fu_648_p3 = ((tmp_4802_fu_580_p3[0:0] == 1'b1) ? select_ln46_2888_fu_640_p3 : icmp_ln46_1925_fu_620_p2);

assign select_ln46_3880_fu_2187_p3 = ((tmp_4800_reg_3077[0:0] == 1'b1) ? zext_ln46_1569_fu_2172_p1 : add_ln46_960_reg_3083);

assign select_ln46_3881_fu_778_p3 = ((tmp_4807_fu_710_p3[0:0] == 1'b1) ? select_ln46_2891_fu_770_p3 : icmp_ln46_1927_fu_750_p2);

assign select_ln46_3882_fu_2247_p3 = ((tmp_4805_reg_3107[0:0] == 1'b1) ? zext_ln46_1570_fu_2232_p1 : add_ln46_961_reg_3113);

assign select_ln46_3883_fu_908_p3 = ((tmp_4812_fu_840_p3[0:0] == 1'b1) ? select_ln46_2894_fu_900_p3 : icmp_ln46_1929_fu_880_p2);

assign select_ln46_3884_fu_2307_p3 = ((tmp_4810_reg_3137[0:0] == 1'b1) ? zext_ln46_1571_fu_2292_p1 : add_ln46_962_reg_3143);

assign select_ln46_3885_fu_1038_p3 = ((tmp_4817_fu_970_p3[0:0] == 1'b1) ? select_ln46_2897_fu_1030_p3 : icmp_ln46_1931_fu_1010_p2);

assign select_ln46_3886_fu_2367_p3 = ((tmp_4815_reg_3167[0:0] == 1'b1) ? zext_ln46_1572_fu_2352_p1 : add_ln46_963_reg_3173);

assign select_ln46_3887_fu_1168_p3 = ((tmp_4822_fu_1100_p3[0:0] == 1'b1) ? select_ln46_2900_fu_1160_p3 : icmp_ln46_1933_fu_1140_p2);

assign select_ln46_3888_fu_2427_p3 = ((tmp_4820_reg_3197[0:0] == 1'b1) ? zext_ln46_1573_fu_2412_p1 : add_ln46_964_reg_3203);

assign select_ln46_3889_fu_1298_p3 = ((tmp_4827_fu_1230_p3[0:0] == 1'b1) ? select_ln46_2903_fu_1290_p3 : icmp_ln46_1935_fu_1270_p2);

assign select_ln46_3890_fu_2487_p3 = ((tmp_4825_reg_3227[0:0] == 1'b1) ? zext_ln46_1574_fu_2472_p1 : add_ln46_965_reg_3233);

assign select_ln46_3891_fu_1428_p3 = ((tmp_4832_fu_1360_p3[0:0] == 1'b1) ? select_ln46_2906_fu_1420_p3 : icmp_ln46_1937_fu_1400_p2);

assign select_ln46_3892_fu_2547_p3 = ((tmp_4830_reg_3257[0:0] == 1'b1) ? zext_ln46_1575_fu_2532_p1 : add_ln46_966_reg_3263);

assign select_ln46_3893_fu_1558_p3 = ((tmp_4837_fu_1490_p3[0:0] == 1'b1) ? select_ln46_2909_fu_1550_p3 : icmp_ln46_1939_fu_1530_p2);

assign select_ln46_3894_fu_2607_p3 = ((tmp_4835_reg_3287[0:0] == 1'b1) ? zext_ln46_1576_fu_2592_p1 : add_ln46_967_reg_3293);

assign select_ln46_3895_fu_1688_p3 = ((tmp_4842_fu_1620_p3[0:0] == 1'b1) ? select_ln46_2912_fu_1680_p3 : icmp_ln46_1941_fu_1660_p2);

assign select_ln46_3896_fu_2667_p3 = ((tmp_4840_reg_3317[0:0] == 1'b1) ? zext_ln46_1577_fu_2652_p1 : add_ln46_968_reg_3323);

assign select_ln46_3897_fu_1818_p3 = ((tmp_4847_fu_1750_p3[0:0] == 1'b1) ? select_ln46_2915_fu_1810_p3 : icmp_ln46_1943_fu_1790_p2);

assign select_ln46_3898_fu_2727_p3 = ((tmp_4845_reg_3347[0:0] == 1'b1) ? zext_ln46_1578_fu_2712_p1 : add_ln46_969_reg_3353);

assign select_ln46_3899_fu_1948_p3 = ((tmp_4852_fu_1880_p3[0:0] == 1'b1) ? select_ln46_2918_fu_1940_p3 : icmp_ln46_1945_fu_1920_p2);

assign select_ln46_3900_fu_2787_p3 = ((tmp_4850_reg_3377[0:0] == 1'b1) ? zext_ln46_1579_fu_2772_p1 : add_ln46_970_reg_3383);

assign select_ln46_fu_250_p3 = ((tmp_4791_fu_236_p3[0:0] == 1'b1) ? icmp_ln46_1919_fu_230_p2 : icmp_ln46_fu_224_p2);

assign tmp_4788_fu_474_p4 = {{p_read2[15:10]}};

assign tmp_4789_fu_182_p3 = p_read[32'd1];

assign tmp_4790_fu_190_p3 = p_read[32'd9];

assign tmp_4791_fu_236_p3 = add_ln46_fu_208_p2[32'd8];

assign tmp_4792_fu_294_p3 = p_read1[32'd15];

assign tmp_4793_fu_312_p3 = p_read1[32'd1];

assign tmp_4794_fu_320_p3 = p_read1[32'd9];

assign tmp_4795_fu_366_p3 = add_ln46_958_fu_338_p2[32'd8];

assign tmp_4796_fu_424_p3 = p_read2[32'd15];

assign tmp_4797_fu_442_p3 = p_read2[32'd1];

assign tmp_4798_fu_450_p3 = p_read2[32'd9];

assign tmp_4799_fu_496_p3 = add_ln46_959_fu_468_p2[32'd8];

assign tmp_4800_fu_554_p3 = p_read3[32'd15];

assign tmp_4801_fu_572_p3 = p_read3[32'd1];

assign tmp_4802_fu_580_p3 = p_read3[32'd9];

assign tmp_4803_fu_604_p4 = {{p_read3[15:10]}};

assign tmp_4804_fu_626_p3 = add_ln46_960_fu_598_p2[32'd8];

assign tmp_4805_fu_684_p3 = p_read4[32'd15];

assign tmp_4806_fu_702_p3 = p_read4[32'd1];

assign tmp_4807_fu_710_p3 = p_read4[32'd9];

assign tmp_4808_fu_734_p4 = {{p_read4[15:10]}};

assign tmp_4809_fu_756_p3 = add_ln46_961_fu_728_p2[32'd8];

assign tmp_4810_fu_814_p3 = p_read5[32'd15];

assign tmp_4811_fu_832_p3 = p_read5[32'd1];

assign tmp_4812_fu_840_p3 = p_read5[32'd9];

assign tmp_4813_fu_864_p4 = {{p_read5[15:10]}};

assign tmp_4814_fu_886_p3 = add_ln46_962_fu_858_p2[32'd8];

assign tmp_4815_fu_944_p3 = p_read6[32'd15];

assign tmp_4816_fu_962_p3 = p_read6[32'd1];

assign tmp_4817_fu_970_p3 = p_read6[32'd9];

assign tmp_4818_fu_994_p4 = {{p_read6[15:10]}};

assign tmp_4819_fu_1016_p3 = add_ln46_963_fu_988_p2[32'd8];

assign tmp_4820_fu_1074_p3 = p_read7[32'd15];

assign tmp_4821_fu_1092_p3 = p_read7[32'd1];

assign tmp_4822_fu_1100_p3 = p_read7[32'd9];

assign tmp_4823_fu_1124_p4 = {{p_read7[15:10]}};

assign tmp_4824_fu_1146_p3 = add_ln46_964_fu_1118_p2[32'd8];

assign tmp_4825_fu_1204_p3 = p_read8[32'd15];

assign tmp_4826_fu_1222_p3 = p_read8[32'd1];

assign tmp_4827_fu_1230_p3 = p_read8[32'd9];

assign tmp_4828_fu_1254_p4 = {{p_read8[15:10]}};

assign tmp_4829_fu_1276_p3 = add_ln46_965_fu_1248_p2[32'd8];

assign tmp_4830_fu_1334_p3 = p_read9[32'd15];

assign tmp_4831_fu_1352_p3 = p_read9[32'd1];

assign tmp_4832_fu_1360_p3 = p_read9[32'd9];

assign tmp_4833_fu_1384_p4 = {{p_read9[15:10]}};

assign tmp_4834_fu_1406_p3 = add_ln46_966_fu_1378_p2[32'd8];

assign tmp_4835_fu_1464_p3 = p_read10[32'd15];

assign tmp_4836_fu_1482_p3 = p_read10[32'd1];

assign tmp_4837_fu_1490_p3 = p_read10[32'd9];

assign tmp_4838_fu_1514_p4 = {{p_read10[15:10]}};

assign tmp_4839_fu_1536_p3 = add_ln46_967_fu_1508_p2[32'd8];

assign tmp_4840_fu_1594_p3 = p_read11[32'd15];

assign tmp_4841_fu_1612_p3 = p_read11[32'd1];

assign tmp_4842_fu_1620_p3 = p_read11[32'd9];

assign tmp_4843_fu_1644_p4 = {{p_read11[15:10]}};

assign tmp_4844_fu_1666_p3 = add_ln46_968_fu_1638_p2[32'd8];

assign tmp_4845_fu_1724_p3 = p_read12[32'd15];

assign tmp_4846_fu_1742_p3 = p_read12[32'd1];

assign tmp_4847_fu_1750_p3 = p_read12[32'd9];

assign tmp_4848_fu_1774_p4 = {{p_read12[15:10]}};

assign tmp_4849_fu_1796_p3 = add_ln46_969_fu_1768_p2[32'd8];

assign tmp_4850_fu_1854_p3 = p_read13[32'd15];

assign tmp_4851_fu_1872_p3 = p_read13[32'd1];

assign tmp_4852_fu_1880_p3 = p_read13[32'd9];

assign tmp_4853_fu_1904_p4 = {{p_read13[15:10]}};

assign tmp_4854_fu_1926_p3 = add_ln46_970_fu_1898_p2[32'd8];

assign tmp_4_fu_214_p4 = {{p_read[15:10]}};

assign tmp_fu_164_p3 = p_read[32'd15];

assign tmp_s_fu_344_p4 = {{p_read1[15:10]}};

assign trunc_ln42_958_fu_284_p1 = p_read1[0:0];

assign trunc_ln42_959_fu_414_p1 = p_read2[0:0];

assign trunc_ln42_960_fu_544_p1 = p_read3[0:0];

assign trunc_ln42_961_fu_674_p1 = p_read4[0:0];

assign trunc_ln42_962_fu_804_p1 = p_read5[0:0];

assign trunc_ln42_963_fu_934_p1 = p_read6[0:0];

assign trunc_ln42_964_fu_1064_p1 = p_read7[0:0];

assign trunc_ln42_965_fu_1194_p1 = p_read8[0:0];

assign trunc_ln42_966_fu_1324_p1 = p_read9[0:0];

assign trunc_ln42_967_fu_1454_p1 = p_read10[0:0];

assign trunc_ln42_968_fu_1584_p1 = p_read11[0:0];

assign trunc_ln42_969_fu_1714_p1 = p_read12[0:0];

assign trunc_ln42_970_fu_1844_p1 = p_read13[0:0];

assign trunc_ln42_fu_154_p1 = p_read[0:0];

assign trunc_ln46_1050_fu_302_p4 = {{p_read1[9:1]}};

assign trunc_ln46_1051_fu_432_p4 = {{p_read2[9:1]}};

assign trunc_ln46_1052_fu_562_p4 = {{p_read3[9:1]}};

assign trunc_ln46_1053_fu_692_p4 = {{p_read4[9:1]}};

assign trunc_ln46_1054_fu_822_p4 = {{p_read5[9:1]}};

assign trunc_ln46_1055_fu_952_p4 = {{p_read6[9:1]}};

assign trunc_ln46_1056_fu_1082_p4 = {{p_read7[9:1]}};

assign trunc_ln46_1057_fu_1212_p4 = {{p_read8[9:1]}};

assign trunc_ln46_1058_fu_1342_p4 = {{p_read9[9:1]}};

assign trunc_ln46_1059_fu_1472_p4 = {{p_read10[9:1]}};

assign trunc_ln46_1060_fu_1602_p4 = {{p_read11[9:1]}};

assign trunc_ln46_1061_fu_1732_p4 = {{p_read12[9:1]}};

assign trunc_ln46_1062_fu_1862_p4 = {{p_read13[9:1]}};

assign trunc_ln46_1565_fu_2034_p1 = add_ln46_958_reg_3023[0:0];

assign trunc_ln46_1566_fu_2094_p1 = add_ln46_959_reg_3053[0:0];

assign trunc_ln46_1567_fu_2154_p1 = add_ln46_960_reg_3083[0:0];

assign trunc_ln46_1568_fu_2214_p1 = add_ln46_961_reg_3113[0:0];

assign trunc_ln46_1569_fu_2274_p1 = add_ln46_962_reg_3143[0:0];

assign trunc_ln46_1570_fu_2334_p1 = add_ln46_963_reg_3173[0:0];

assign trunc_ln46_1571_fu_2394_p1 = add_ln46_964_reg_3203[0:0];

assign trunc_ln46_1572_fu_2454_p1 = add_ln46_965_reg_3233[0:0];

assign trunc_ln46_1573_fu_2514_p1 = add_ln46_966_reg_3263[0:0];

assign trunc_ln46_1574_fu_2574_p1 = add_ln46_967_reg_3293[0:0];

assign trunc_ln46_1575_fu_2634_p1 = add_ln46_968_reg_3323[0:0];

assign trunc_ln46_1576_fu_2694_p1 = add_ln46_969_reg_3353[0:0];

assign trunc_ln46_1577_fu_2754_p1 = add_ln46_970_reg_3383[0:0];

assign trunc_ln46_fu_1974_p1 = add_ln46_reg_2993[0:0];

assign trunc_ln46_s_fu_172_p4 = {{p_read[9:1]}};

assign xor_ln46_1919_fu_1982_p2 = (1'd1 ^ and_ln46_2880_reg_3006);

assign xor_ln46_1920_fu_2037_p2 = (or_ln46_1920_reg_3030 ^ 1'd1);

assign xor_ln46_1921_fu_2042_p2 = (1'd1 ^ and_ln46_2883_reg_3036);

assign xor_ln46_1922_fu_2097_p2 = (or_ln46_1922_reg_3060 ^ 1'd1);

assign xor_ln46_1923_fu_2102_p2 = (1'd1 ^ and_ln46_2886_reg_3066);

assign xor_ln46_1924_fu_2157_p2 = (or_ln46_1924_reg_3090 ^ 1'd1);

assign xor_ln46_1925_fu_2162_p2 = (1'd1 ^ and_ln46_2889_reg_3096);

assign xor_ln46_1926_fu_2217_p2 = (or_ln46_1926_reg_3120 ^ 1'd1);

assign xor_ln46_1927_fu_2222_p2 = (1'd1 ^ and_ln46_2892_reg_3126);

assign xor_ln46_1928_fu_2277_p2 = (or_ln46_1928_reg_3150 ^ 1'd1);

assign xor_ln46_1929_fu_2282_p2 = (1'd1 ^ and_ln46_2895_reg_3156);

assign xor_ln46_1930_fu_2337_p2 = (or_ln46_1930_reg_3180 ^ 1'd1);

assign xor_ln46_1931_fu_2342_p2 = (1'd1 ^ and_ln46_2898_reg_3186);

assign xor_ln46_1932_fu_2397_p2 = (or_ln46_1932_reg_3210 ^ 1'd1);

assign xor_ln46_1933_fu_2402_p2 = (1'd1 ^ and_ln46_2901_reg_3216);

assign xor_ln46_1934_fu_2457_p2 = (or_ln46_1934_reg_3240 ^ 1'd1);

assign xor_ln46_1935_fu_2462_p2 = (1'd1 ^ and_ln46_2904_reg_3246);

assign xor_ln46_1936_fu_2517_p2 = (or_ln46_1936_reg_3270 ^ 1'd1);

assign xor_ln46_1937_fu_2522_p2 = (1'd1 ^ and_ln46_2907_reg_3276);

assign xor_ln46_1938_fu_2577_p2 = (or_ln46_1938_reg_3300 ^ 1'd1);

assign xor_ln46_1939_fu_2582_p2 = (1'd1 ^ and_ln46_2910_reg_3306);

assign xor_ln46_1940_fu_2637_p2 = (or_ln46_1940_reg_3330 ^ 1'd1);

assign xor_ln46_1941_fu_2642_p2 = (1'd1 ^ and_ln46_2913_reg_3336);

assign xor_ln46_1942_fu_2697_p2 = (or_ln46_1942_reg_3360 ^ 1'd1);

assign xor_ln46_1943_fu_2702_p2 = (1'd1 ^ and_ln46_2916_reg_3366);

assign xor_ln46_1944_fu_2757_p2 = (or_ln46_1944_reg_3390 ^ 1'd1);

assign xor_ln46_1945_fu_2762_p2 = (1'd1 ^ and_ln46_2919_reg_3396);

assign xor_ln46_2400_fu_244_p2 = (tmp_4791_fu_236_p3 ^ 1'd1);

assign xor_ln46_2401_fu_374_p2 = (tmp_4795_fu_366_p3 ^ 1'd1);

assign xor_ln46_2402_fu_504_p2 = (tmp_4799_fu_496_p3 ^ 1'd1);

assign xor_ln46_2403_fu_634_p2 = (tmp_4804_fu_626_p3 ^ 1'd1);

assign xor_ln46_2404_fu_764_p2 = (tmp_4809_fu_756_p3 ^ 1'd1);

assign xor_ln46_2405_fu_894_p2 = (tmp_4814_fu_886_p3 ^ 1'd1);

assign xor_ln46_2406_fu_1024_p2 = (tmp_4819_fu_1016_p3 ^ 1'd1);

assign xor_ln46_2407_fu_1154_p2 = (tmp_4824_fu_1146_p3 ^ 1'd1);

assign xor_ln46_2408_fu_1284_p2 = (tmp_4829_fu_1276_p3 ^ 1'd1);

assign xor_ln46_2409_fu_1414_p2 = (tmp_4834_fu_1406_p3 ^ 1'd1);

assign xor_ln46_2410_fu_1544_p2 = (tmp_4839_fu_1536_p3 ^ 1'd1);

assign xor_ln46_2411_fu_1674_p2 = (tmp_4844_fu_1666_p3 ^ 1'd1);

assign xor_ln46_2412_fu_1804_p2 = (tmp_4849_fu_1796_p3 ^ 1'd1);

assign xor_ln46_2413_fu_1934_p2 = (tmp_4854_fu_1926_p3 ^ 1'd1);

assign xor_ln46_fu_1977_p2 = (or_ln46_reg_3000 ^ 1'd1);

assign zext_ln46_1087_fu_204_p1 = and_ln46_fu_198_p2;

assign zext_ln46_1088_fu_334_p1 = and_ln46_2882_fu_328_p2;

assign zext_ln46_1091_fu_464_p1 = and_ln46_2885_fu_458_p2;

assign zext_ln46_1094_fu_594_p1 = and_ln46_2888_fu_588_p2;

assign zext_ln46_1096_fu_724_p1 = and_ln46_2891_fu_718_p2;

assign zext_ln46_1098_fu_854_p1 = and_ln46_2894_fu_848_p2;

assign zext_ln46_1101_fu_984_p1 = and_ln46_2897_fu_978_p2;

assign zext_ln46_1104_fu_1114_p1 = and_ln46_2900_fu_1108_p2;

assign zext_ln46_1107_fu_1244_p1 = and_ln46_2903_fu_1238_p2;

assign zext_ln46_1108_fu_1374_p1 = and_ln46_2906_fu_1368_p2;

assign zext_ln46_1110_fu_1504_p1 = and_ln46_2909_fu_1498_p2;

assign zext_ln46_1112_fu_1634_p1 = and_ln46_2912_fu_1628_p2;

assign zext_ln46_1114_fu_1764_p1 = and_ln46_2915_fu_1758_p2;

assign zext_ln46_1115_fu_1894_p1 = and_ln46_2918_fu_1888_p2;

assign zext_ln46_1567_fu_2052_p1 = and_ln46_2884_fu_2047_p2;

assign zext_ln46_1568_fu_2112_p1 = and_ln46_2887_fu_2107_p2;

assign zext_ln46_1569_fu_2172_p1 = and_ln46_2890_fu_2167_p2;

assign zext_ln46_1570_fu_2232_p1 = and_ln46_2893_fu_2227_p2;

assign zext_ln46_1571_fu_2292_p1 = and_ln46_2896_fu_2287_p2;

assign zext_ln46_1572_fu_2352_p1 = and_ln46_2899_fu_2347_p2;

assign zext_ln46_1573_fu_2412_p1 = and_ln46_2902_fu_2407_p2;

assign zext_ln46_1574_fu_2472_p1 = and_ln46_2905_fu_2467_p2;

assign zext_ln46_1575_fu_2532_p1 = and_ln46_2908_fu_2527_p2;

assign zext_ln46_1576_fu_2592_p1 = and_ln46_2911_fu_2587_p2;

assign zext_ln46_1577_fu_2652_p1 = and_ln46_2914_fu_2647_p2;

assign zext_ln46_1578_fu_2712_p1 = and_ln46_2917_fu_2707_p2;

assign zext_ln46_1579_fu_2772_p1 = and_ln46_2920_fu_2767_p2;

assign zext_ln46_fu_1992_p1 = and_ln46_2881_fu_1987_p2;

endmodule //JetTagger_relu_ap_fixed_16_6_5_3_0_ap_ufixed_9_0_4_0_0_relu_config13_s
