// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module JetTagger_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config22_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read3,
        p_read4,
        p_read6,
        p_read9,
        p_read11,
        p_read15,
        p_read18,
        p_read19,
        p_read22,
        p_read25,
        p_read28,
        p_read31,
        layer22_out,
        layer22_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [8:0] p_read;
input  [8:0] p_read3;
input  [8:0] p_read4;
input  [8:0] p_read6;
input  [8:0] p_read9;
input  [8:0] p_read11;
input  [8:0] p_read15;
input  [8:0] p_read18;
input  [8:0] p_read19;
input  [8:0] p_read22;
input  [8:0] p_read25;
input  [8:0] p_read28;
input  [8:0] p_read31;
output  [15:0] layer22_out;
output   layer22_out_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] layer22_out;
reg layer22_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg   [8:0] p_read3122_reg_2202;
reg    ap_block_pp0_stage0_11001;
reg   [8:0] p_read2821_reg_2207;
reg   [8:0] p_read2520_reg_2212;
reg   [8:0] p_read2219_reg_2217;
reg   [8:0] p_read1918_reg_2222;
reg   [8:0] p_read1817_reg_2227;
reg   [8:0] p_read1516_reg_2233;
reg   [8:0] p_read1115_reg_2238;
reg   [8:0] p_read914_reg_2243;
reg   [8:0] p_read613_reg_2248;
reg   [8:0] p_read412_reg_2253;
reg   [8:0] p_read311_reg_2258;
reg   [8:0] p_read_2490_reg_2263;
reg   [8:0] trunc_ln42_2_reg_2268;
reg   [7:0] tmp_50_reg_2273;
reg   [10:0] tmp_51_reg_2278;
reg   [7:0] tmp_55_reg_2283;
wire   [9:0] add_ln58_fu_2054_p2;
reg   [9:0] add_ln58_reg_2288;
wire   [9:0] add_ln58_1_fu_2068_p2;
reg   [9:0] add_ln58_1_reg_2293;
wire   [9:0] add_ln58_2_fu_2078_p2;
reg   [9:0] add_ln58_2_reg_2298;
wire   [9:0] add_ln58_6_fu_2092_p2;
reg   [9:0] add_ln58_6_reg_2303;
wire   [10:0] add_ln58_9_fu_2098_p2;
reg   [10:0] add_ln58_9_reg_2308;
wire   [11:0] add_ln58_5_fu_2128_p2;
reg   [11:0] add_ln58_5_reg_2313;
wire   [12:0] add_ln58_11_fu_2179_p2;
reg   [12:0] add_ln58_11_reg_2318;
wire  signed [15:0] sext_ln66_fu_2197_p1;
reg   [15:0] layer22_out_preg;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] mul_ln73_5_fu_186_p0;
wire   [8:0] mul_ln73_5_fu_186_p1;
wire    ap_block_pp0_stage0;
wire   [8:0] mul_ln73_4_fu_189_p0;
wire  signed [7:0] mul_ln73_4_fu_189_p1;
wire   [8:0] mul_ln42_1_fu_190_p0;
wire   [7:0] mul_ln42_1_fu_190_p1;
wire   [8:0] mul_ln73_8_fu_191_p0;
wire   [8:0] mul_ln73_8_fu_191_p1;
wire   [8:0] mul_ln42_2_fu_196_p0;
wire   [7:0] mul_ln42_2_fu_196_p1;
wire   [8:0] mul_ln73_3_fu_199_p0;
wire  signed [8:0] mul_ln73_3_fu_199_p1;
wire   [8:0] mul_ln73_1_fu_202_p0;
wire  signed [8:0] mul_ln73_1_fu_202_p1;
wire   [8:0] mul_ln73_6_fu_206_p0;
wire   [8:0] mul_ln73_6_fu_206_p1;
wire   [8:0] mul_ln73_7_fu_209_p0;
wire   [10:0] mul_ln73_7_fu_209_p1;
wire   [8:0] mul_ln42_fu_212_p0;
wire   [7:0] mul_ln42_fu_212_p1;
wire   [8:0] mul_ln73_2_fu_213_p0;
wire   [8:0] mul_ln73_2_fu_213_p1;
wire   [8:0] mul_ln73_fu_214_p0;
wire   [8:0] mul_ln73_fu_214_p1;
wire   [16:0] mul_ln73_fu_214_p2;
wire   [8:0] tmp_fu_1840_p4;
wire   [17:0] mul_ln73_1_fu_202_p2;
wire   [9:0] trunc_ln42_s_fu_1858_p4;
wire   [16:0] mul_ln73_2_fu_213_p2;
wire   [17:0] mul_ln73_3_fu_199_p2;
wire   [9:0] trunc_ln42_1_fu_1890_p4;
wire   [16:0] mul_ln73_4_fu_189_p2;
wire   [16:0] mul_ln73_5_fu_186_p2;
wire   [16:0] mul_ln73_6_fu_206_p2;
wire   [16:0] shl_ln_fu_1946_p3;
wire   [9:0] shl_ln73_s_fu_1957_p3;
wire   [17:0] zext_ln73_fu_1953_p1;
wire   [17:0] zext_ln73_1_fu_1964_p1;
wire   [17:0] add_ln73_fu_1968_p2;
wire   [15:0] mul_ln42_fu_212_p2;
wire   [18:0] mul_ln73_7_fu_209_p2;
wire   [16:0] mul_ln73_8_fu_191_p2;
wire   [15:0] mul_ln42_1_fu_190_p2;
wire   [15:0] mul_ln42_2_fu_196_p2;
wire   [9:0] lshr_ln42_cast_fu_1850_p1;
wire   [8:0] tmp_48_fu_1876_p4;
wire   [8:0] tmp_49_fu_1922_p4;
wire   [9:0] zext_ln58_2_fu_2064_p1;
wire   [9:0] zext_ln58_1_fu_2060_p1;
wire   [8:0] trunc_ln70_2_fu_1936_p4;
wire   [9:0] trunc_ln42_3_fu_1974_p4;
wire   [9:0] zext_ln58_fu_2074_p1;
wire   [8:0] trunc_ln70_6_fu_2016_p4;
wire   [7:0] tmp_53_fu_2030_p4;
wire   [9:0] zext_ln58_4_fu_2088_p1;
wire   [9:0] zext_ln58_3_fu_2084_p1;
wire  signed [10:0] sext_ln70_fu_1868_p1;
wire  signed [10:0] sext_ln70_1_fu_1900_p1;
wire   [10:0] zext_ln58_8_fu_2110_p1;
wire   [10:0] add_ln58_3_fu_2113_p2;
wire   [11:0] zext_ln58_9_fu_2118_p1;
wire   [11:0] zext_ln58_7_fu_2107_p1;
wire   [11:0] add_ln58_4_fu_2122_p2;
wire   [11:0] zext_ln58_6_fu_2104_p1;
wire  signed [10:0] sext_ln58_fu_2140_p1;
wire   [10:0] zext_ln58_11_fu_2137_p1;
wire   [10:0] add_ln58_7_fu_2143_p2;
wire  signed [11:0] sext_ln58_1_fu_2149_p1;
wire   [11:0] zext_ln58_5_fu_2134_p1;
wire   [11:0] add_ln58_8_fu_2153_p2;
wire  signed [11:0] sext_ln58_4_fu_2166_p1;
wire  signed [11:0] sext_ln58_3_fu_2163_p1;
wire   [11:0] add_ln58_10_fu_2169_p2;
wire  signed [12:0] sext_ln58_5_fu_2175_p1;
wire  signed [12:0] sext_ln58_2_fu_2159_p1;
wire  signed [13:0] sext_ln58_6_fu_2188_p1;
wire   [13:0] zext_ln58_10_fu_2185_p1;
wire   [13:0] add_ln58_12_fu_2191_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] mul_ln42_1_fu_190_p00;
wire   [15:0] mul_ln42_2_fu_196_p00;
wire   [15:0] mul_ln42_fu_212_p00;
wire   [17:0] mul_ln73_1_fu_202_p00;
wire   [16:0] mul_ln73_2_fu_213_p00;
wire   [17:0] mul_ln73_3_fu_199_p00;
wire   [16:0] mul_ln73_4_fu_189_p00;
wire   [16:0] mul_ln73_5_fu_186_p00;
wire   [16:0] mul_ln73_6_fu_206_p00;
wire   [18:0] mul_ln73_7_fu_209_p00;
wire   [16:0] mul_ln73_8_fu_191_p00;
wire   [16:0] mul_ln73_fu_214_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 layer22_out_preg = 16'd0;
end

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U5797(
    .din0(mul_ln73_5_fu_186_p0),
    .din1(mul_ln73_5_fu_186_p1),
    .dout(mul_ln73_5_fu_186_p2)
);

JetTagger_mul_9ns_8s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_9ns_8s_17_1_1_U5798(
    .din0(mul_ln73_4_fu_189_p0),
    .din1(mul_ln73_4_fu_189_p1),
    .dout(mul_ln73_4_fu_189_p2)
);

JetTagger_mul_9ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_9ns_8ns_16_1_1_U5799(
    .din0(mul_ln42_1_fu_190_p0),
    .din1(mul_ln42_1_fu_190_p1),
    .dout(mul_ln42_1_fu_190_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U5800(
    .din0(mul_ln73_8_fu_191_p0),
    .din1(mul_ln73_8_fu_191_p1),
    .dout(mul_ln73_8_fu_191_p2)
);

JetTagger_mul_9ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_9ns_8ns_16_1_1_U5801(
    .din0(mul_ln42_2_fu_196_p0),
    .din1(mul_ln42_2_fu_196_p1),
    .dout(mul_ln42_2_fu_196_p2)
);

JetTagger_mul_9ns_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9ns_9s_18_1_1_U5802(
    .din0(mul_ln73_3_fu_199_p0),
    .din1(mul_ln73_3_fu_199_p1),
    .dout(mul_ln73_3_fu_199_p2)
);

JetTagger_mul_9ns_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9ns_9s_18_1_1_U5803(
    .din0(mul_ln73_1_fu_202_p0),
    .din1(mul_ln73_1_fu_202_p1),
    .dout(mul_ln73_1_fu_202_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U5804(
    .din0(mul_ln73_6_fu_206_p0),
    .din1(mul_ln73_6_fu_206_p1),
    .dout(mul_ln73_6_fu_206_p2)
);

JetTagger_mul_9ns_11ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_1_U5805(
    .din0(mul_ln73_7_fu_209_p0),
    .din1(mul_ln73_7_fu_209_p1),
    .dout(mul_ln73_7_fu_209_p2)
);

JetTagger_mul_9ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_9ns_8ns_16_1_1_U5806(
    .din0(mul_ln42_fu_212_p0),
    .din1(mul_ln42_fu_212_p1),
    .dout(mul_ln42_fu_212_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U5807(
    .din0(mul_ln73_2_fu_213_p0),
    .din1(mul_ln73_2_fu_213_p1),
    .dout(mul_ln73_2_fu_213_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U5808(
    .din0(mul_ln73_fu_214_p0),
    .din1(mul_ln73_fu_214_p1),
    .dout(mul_ln73_fu_214_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        layer22_out_preg <= 16'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            layer22_out_preg <= sext_ln66_fu_2197_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln58_11_reg_2318 <= add_ln58_11_fu_2179_p2;
        add_ln58_5_reg_2313 <= add_ln58_5_fu_2128_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln58_1_reg_2293 <= add_ln58_1_fu_2068_p2;
        add_ln58_2_reg_2298 <= add_ln58_2_fu_2078_p2;
        add_ln58_6_reg_2303 <= add_ln58_6_fu_2092_p2;
        add_ln58_9_reg_2308 <= add_ln58_9_fu_2098_p2;
        add_ln58_reg_2288 <= add_ln58_fu_2054_p2;
        p_read1115_reg_2238 <= p_read11;
        p_read1516_reg_2233 <= p_read15;
        p_read1817_reg_2227 <= p_read18;
        p_read1918_reg_2222 <= p_read19;
        p_read2219_reg_2217 <= p_read22;
        p_read2520_reg_2212 <= p_read25;
        p_read2821_reg_2207 <= p_read28;
        p_read311_reg_2258 <= p_read3;
        p_read3122_reg_2202 <= p_read31;
        p_read412_reg_2253 <= p_read4;
        p_read613_reg_2248 <= p_read6;
        p_read914_reg_2243 <= p_read9;
        p_read_2490_reg_2263 <= p_read;
        tmp_50_reg_2273 <= {{mul_ln42_fu_212_p2[15:8]}};
        tmp_51_reg_2278 <= {{mul_ln73_7_fu_209_p2[18:8]}};
        tmp_55_reg_2283 <= {{mul_ln42_2_fu_196_p2[15:8]}};
        trunc_ln42_2_reg_2268 <= {{mul_ln73_4_fu_189_p2[16:8]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer22_out = sext_ln66_fu_2197_p1;
    end else begin
        layer22_out = layer22_out_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        layer22_out_ap_vld = 1'b1;
    end else begin
        layer22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_10_fu_2169_p2 = ($signed(sext_ln58_4_fu_2166_p1) + $signed(sext_ln58_3_fu_2163_p1));

assign add_ln58_11_fu_2179_p2 = ($signed(sext_ln58_5_fu_2175_p1) + $signed(sext_ln58_2_fu_2159_p1));

assign add_ln58_12_fu_2191_p2 = ($signed(sext_ln58_6_fu_2188_p1) + $signed(zext_ln58_10_fu_2185_p1));

assign add_ln58_1_fu_2068_p2 = (zext_ln58_2_fu_2064_p1 + zext_ln58_1_fu_2060_p1);

assign add_ln58_2_fu_2078_p2 = (trunc_ln42_3_fu_1974_p4 + zext_ln58_fu_2074_p1);

assign add_ln58_3_fu_2113_p2 = (tmp_51_reg_2278 + zext_ln58_8_fu_2110_p1);

assign add_ln58_4_fu_2122_p2 = (zext_ln58_9_fu_2118_p1 + zext_ln58_7_fu_2107_p1);

assign add_ln58_5_fu_2128_p2 = (add_ln58_4_fu_2122_p2 + zext_ln58_6_fu_2104_p1);

assign add_ln58_6_fu_2092_p2 = (zext_ln58_4_fu_2088_p1 + zext_ln58_3_fu_2084_p1);

assign add_ln58_7_fu_2143_p2 = ($signed(sext_ln58_fu_2140_p1) + $signed(zext_ln58_11_fu_2137_p1));

assign add_ln58_8_fu_2153_p2 = ($signed(sext_ln58_1_fu_2149_p1) + $signed(zext_ln58_5_fu_2134_p1));

assign add_ln58_9_fu_2098_p2 = ($signed(sext_ln70_fu_1868_p1) + $signed(sext_ln70_1_fu_1900_p1));

assign add_ln58_fu_2054_p2 = ($signed(lshr_ln42_cast_fu_1850_p1) + $signed(10'd996));

assign add_ln73_fu_1968_p2 = (zext_ln73_fu_1953_p1 + zext_ln73_1_fu_1964_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign lshr_ln42_cast_fu_1850_p1 = tmp_fu_1840_p4;

assign mul_ln42_1_fu_190_p0 = mul_ln42_1_fu_190_p00;

assign mul_ln42_1_fu_190_p00 = p_read2821_reg_2207;

assign mul_ln42_1_fu_190_p1 = 16'd109;

assign mul_ln42_2_fu_196_p0 = mul_ln42_2_fu_196_p00;

assign mul_ln42_2_fu_196_p00 = p_read3122_reg_2202;

assign mul_ln42_2_fu_196_p1 = 16'd106;

assign mul_ln42_fu_212_p0 = mul_ln42_fu_212_p00;

assign mul_ln42_fu_212_p00 = p_read1918_reg_2222;

assign mul_ln42_fu_212_p1 = 16'd100;

assign mul_ln73_1_fu_202_p0 = mul_ln73_1_fu_202_p00;

assign mul_ln73_1_fu_202_p00 = p_read311_reg_2258;

assign mul_ln73_1_fu_202_p1 = 18'd261987;

assign mul_ln73_2_fu_213_p0 = mul_ln73_2_fu_213_p00;

assign mul_ln73_2_fu_213_p00 = p_read412_reg_2253;

assign mul_ln73_2_fu_213_p1 = 17'd238;

assign mul_ln73_3_fu_199_p0 = mul_ln73_3_fu_199_p00;

assign mul_ln73_3_fu_199_p00 = p_read613_reg_2248;

assign mul_ln73_3_fu_199_p1 = 18'd261980;

assign mul_ln73_4_fu_189_p0 = mul_ln73_4_fu_189_p00;

assign mul_ln73_4_fu_189_p00 = p_read914_reg_2243;

assign mul_ln73_4_fu_189_p1 = 17'd130995;

assign mul_ln73_5_fu_186_p0 = mul_ln73_5_fu_186_p00;

assign mul_ln73_5_fu_186_p00 = p_read1115_reg_2238;

assign mul_ln73_5_fu_186_p1 = 17'd131;

assign mul_ln73_6_fu_206_p0 = mul_ln73_6_fu_206_p00;

assign mul_ln73_6_fu_206_p00 = p_read1516_reg_2233;

assign mul_ln73_6_fu_206_p1 = 17'd133;

assign mul_ln73_7_fu_209_p0 = mul_ln73_7_fu_209_p00;

assign mul_ln73_7_fu_209_p00 = p_read2219_reg_2217;

assign mul_ln73_7_fu_209_p1 = 19'd673;

assign mul_ln73_8_fu_191_p0 = mul_ln73_8_fu_191_p00;

assign mul_ln73_8_fu_191_p00 = p_read2520_reg_2212;

assign mul_ln73_8_fu_191_p1 = 17'd175;

assign mul_ln73_fu_214_p0 = mul_ln73_fu_214_p00;

assign mul_ln73_fu_214_p00 = p_read_2490_reg_2263;

assign mul_ln73_fu_214_p1 = 17'd172;

assign sext_ln58_1_fu_2149_p1 = $signed(add_ln58_7_fu_2143_p2);

assign sext_ln58_2_fu_2159_p1 = $signed(add_ln58_8_fu_2153_p2);

assign sext_ln58_3_fu_2163_p1 = $signed(add_ln58_9_reg_2308);

assign sext_ln58_4_fu_2166_p1 = $signed(trunc_ln42_2_reg_2268);

assign sext_ln58_5_fu_2175_p1 = $signed(add_ln58_10_fu_2169_p2);

assign sext_ln58_6_fu_2188_p1 = $signed(add_ln58_11_reg_2318);

assign sext_ln58_fu_2140_p1 = $signed(add_ln58_reg_2288);

assign sext_ln66_fu_2197_p1 = $signed(add_ln58_12_fu_2191_p2);

assign sext_ln70_1_fu_1900_p1 = $signed(trunc_ln42_1_fu_1890_p4);

assign sext_ln70_fu_1868_p1 = $signed(trunc_ln42_s_fu_1858_p4);

assign shl_ln73_s_fu_1957_p3 = {{p_read1817_reg_2227}, {1'd0}};

assign shl_ln_fu_1946_p3 = {{p_read1817_reg_2227}, {8'd0}};

assign tmp_48_fu_1876_p4 = {{mul_ln73_2_fu_213_p2[16:8]}};

assign tmp_49_fu_1922_p4 = {{mul_ln73_5_fu_186_p2[16:8]}};

assign tmp_53_fu_2030_p4 = {{mul_ln42_1_fu_190_p2[15:8]}};

assign tmp_fu_1840_p4 = {{mul_ln73_fu_214_p2[16:8]}};

assign trunc_ln42_1_fu_1890_p4 = {{mul_ln73_3_fu_199_p2[17:8]}};

assign trunc_ln42_3_fu_1974_p4 = {{add_ln73_fu_1968_p2[17:8]}};

assign trunc_ln42_s_fu_1858_p4 = {{mul_ln73_1_fu_202_p2[17:8]}};

assign trunc_ln70_2_fu_1936_p4 = {{mul_ln73_6_fu_206_p2[16:8]}};

assign trunc_ln70_6_fu_2016_p4 = {{mul_ln73_8_fu_191_p2[16:8]}};

assign zext_ln58_10_fu_2185_p1 = add_ln58_5_reg_2313;

assign zext_ln58_11_fu_2137_p1 = tmp_55_reg_2283;

assign zext_ln58_1_fu_2060_p1 = tmp_48_fu_1876_p4;

assign zext_ln58_2_fu_2064_p1 = tmp_49_fu_1922_p4;

assign zext_ln58_3_fu_2084_p1 = trunc_ln70_6_fu_2016_p4;

assign zext_ln58_4_fu_2088_p1 = tmp_53_fu_2030_p4;

assign zext_ln58_5_fu_2134_p1 = add_ln58_6_reg_2303;

assign zext_ln58_6_fu_2104_p1 = add_ln58_1_reg_2293;

assign zext_ln58_7_fu_2107_p1 = add_ln58_2_reg_2298;

assign zext_ln58_8_fu_2110_p1 = tmp_50_reg_2273;

assign zext_ln58_9_fu_2118_p1 = add_ln58_3_fu_2113_p2;

assign zext_ln58_fu_2074_p1 = trunc_ln70_2_fu_1936_p4;

assign zext_ln73_1_fu_1964_p1 = shl_ln73_s_fu_1957_p3;

assign zext_ln73_fu_1953_p1 = shl_ln_fu_1946_p3;

endmodule //JetTagger_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config22_s
