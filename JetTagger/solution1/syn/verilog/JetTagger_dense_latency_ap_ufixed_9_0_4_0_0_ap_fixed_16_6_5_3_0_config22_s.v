// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module JetTagger_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config22_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read3,
        p_read4,
        p_read6,
        p_read9,
        p_read11,
        p_read15,
        p_read18,
        p_read19,
        p_read22,
        p_read25,
        p_read28,
        p_read31,
        res_0,
        res_0_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [8:0] p_read;
input  [8:0] p_read3;
input  [8:0] p_read4;
input  [8:0] p_read6;
input  [8:0] p_read9;
input  [8:0] p_read11;
input  [8:0] p_read15;
input  [8:0] p_read18;
input  [8:0] p_read19;
input  [8:0] p_read22;
input  [8:0] p_read25;
input  [8:0] p_read28;
input  [8:0] p_read31;
output  [13:0] res_0;
output   res_0_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[13:0] res_0;
reg res_0_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg   [8:0] p_read3122_reg_2187;
reg    ap_block_pp0_stage0_11001;
reg   [8:0] p_read2821_reg_2192;
reg   [8:0] p_read2520_reg_2197;
reg   [8:0] p_read2219_reg_2202;
reg   [8:0] p_read1918_reg_2207;
reg   [8:0] p_read1817_reg_2212;
reg   [8:0] p_read1516_reg_2218;
reg   [8:0] p_read1115_reg_2223;
reg   [8:0] p_read914_reg_2228;
reg   [8:0] p_read613_reg_2233;
reg   [8:0] p_read412_reg_2238;
reg   [8:0] p_read311_reg_2243;
reg   [8:0] p_read_2527_reg_2248;
reg   [8:0] tmp_reg_2253;
reg   [9:0] trunc_ln42_s_reg_2258;
reg   [8:0] tmp_1_reg_2263;
reg   [9:0] trunc_ln42_1_reg_2268;
reg   [8:0] trunc_ln42_2_reg_2273;
reg   [8:0] tmp_2_reg_2278;
reg   [8:0] trunc_ln70_2_reg_2283;
reg   [9:0] trunc_ln42_3_reg_2288;
reg   [7:0] tmp_3_reg_2293;
reg   [7:0] tmp_3_reg_2293_pp0_iter2_reg;
reg   [8:0] trunc_ln70_6_reg_2303;
reg   [7:0] tmp_6_reg_2308;
reg   [7:0] tmp_8_reg_2313;
reg   [10:0] tmp_4_reg_2318;
wire   [9:0] add_ln58_1_fu_2063_p2;
reg   [9:0] add_ln58_1_reg_2323;
reg   [9:0] add_ln58_1_reg_2323_pp0_iter3_reg;
wire   [9:0] add_ln58_2_fu_2072_p2;
reg   [9:0] add_ln58_2_reg_2328;
reg   [9:0] add_ln58_2_reg_2328_pp0_iter3_reg;
wire   [9:0] add_ln58_6_fu_2083_p2;
reg   [9:0] add_ln58_6_reg_2333;
wire   [10:0] add_ln58_7_fu_2096_p2;
reg   [10:0] add_ln58_7_reg_2338;
wire   [11:0] add_ln58_10_fu_2115_p2;
reg   [11:0] add_ln58_10_reg_2343;
reg   [11:0] add_ln58_10_reg_2343_pp0_iter3_reg;
wire   [10:0] add_ln58_3_fu_2124_p2;
reg   [10:0] add_ln58_3_reg_2348;
wire   [11:0] add_ln58_8_fu_2135_p2;
reg   [11:0] add_ln58_8_reg_2353;
wire   [11:0] add_ln58_5_fu_2156_p2;
reg   [11:0] add_ln58_5_reg_2358;
wire   [12:0] add_ln58_11_fu_2168_p2;
reg   [12:0] add_ln58_11_reg_2363;
wire   [13:0] add_ln58_12_fu_2180_p2;
reg   [13:0] res_0_preg;
reg    ap_block_pp0_stage0_01001;
wire   [8:0] mul_ln73_180_fu_186_p0;
wire   [8:0] mul_ln73_180_fu_186_p1;
wire    ap_block_pp0_stage0;
wire   [8:0] mul_ln73_179_fu_189_p0;
wire  signed [7:0] mul_ln73_179_fu_189_p1;
wire   [8:0] mul_ln42_1_fu_190_p0;
wire   [7:0] mul_ln42_1_fu_190_p1;
wire   [8:0] mul_ln73_183_fu_191_p0;
wire   [8:0] mul_ln73_183_fu_191_p1;
wire   [8:0] mul_ln42_2_fu_196_p0;
wire   [7:0] mul_ln42_2_fu_196_p1;
wire   [8:0] mul_ln73_178_fu_199_p0;
wire  signed [8:0] mul_ln73_178_fu_199_p1;
wire   [8:0] mul_ln73_176_fu_202_p0;
wire  signed [8:0] mul_ln73_176_fu_202_p1;
wire   [8:0] mul_ln73_181_fu_206_p0;
wire   [8:0] mul_ln73_181_fu_206_p1;
wire   [8:0] grp_fu_209_p0;
wire   [10:0] grp_fu_209_p1;
wire   [8:0] mul_ln42_fu_212_p0;
wire   [7:0] mul_ln42_fu_212_p1;
wire   [8:0] mul_ln73_177_fu_213_p0;
wire   [8:0] mul_ln73_177_fu_213_p1;
wire   [8:0] mul_ln73_fu_214_p0;
wire   [8:0] mul_ln73_fu_214_p1;
wire   [16:0] mul_ln73_fu_214_p2;
wire   [17:0] mul_ln73_176_fu_202_p2;
wire   [16:0] mul_ln73_177_fu_213_p2;
wire   [17:0] mul_ln73_178_fu_199_p2;
wire   [16:0] mul_ln73_179_fu_189_p2;
wire   [16:0] mul_ln73_180_fu_186_p2;
wire   [16:0] mul_ln73_181_fu_206_p2;
wire   [16:0] shl_ln73_50_fu_1934_p3;
wire   [9:0] shl_ln73_51_fu_1945_p3;
wire   [17:0] zext_ln73_fu_1941_p1;
wire   [17:0] zext_ln73_208_fu_1952_p1;
wire   [17:0] add_ln73_fu_1956_p2;
wire   [15:0] mul_ln42_fu_212_p2;
wire   [16:0] mul_ln73_183_fu_191_p2;
wire   [15:0] mul_ln42_1_fu_190_p2;
wire   [15:0] mul_ln42_2_fu_196_p2;
wire   [18:0] grp_fu_209_p2;
wire   [9:0] lshr_ln42_cast_fu_2032_p1;
wire   [9:0] zext_ln58_2_fu_2060_p1;
wire   [9:0] zext_ln58_1_fu_2057_p1;
wire   [9:0] zext_ln58_fu_2069_p1;
wire   [9:0] zext_ln58_4_fu_2080_p1;
wire   [9:0] zext_ln58_3_fu_2077_p1;
wire   [9:0] add_ln58_fu_2051_p2;
wire  signed [10:0] sext_ln58_fu_2092_p1;
wire   [10:0] zext_ln58_11_fu_2089_p1;
wire  signed [10:0] sext_ln70_fu_2035_p1;
wire  signed [10:0] sext_ln70_1_fu_2038_p1;
wire   [10:0] add_ln58_9_fu_2102_p2;
wire  signed [11:0] sext_ln58_4_fu_2112_p1;
wire  signed [11:0] sext_ln58_3_fu_2108_p1;
wire   [10:0] zext_ln58_8_fu_2121_p1;
wire  signed [11:0] sext_ln58_1_fu_2132_p1;
wire   [11:0] zext_ln58_5_fu_2129_p1;
wire   [11:0] zext_ln58_9_fu_2147_p1;
wire   [11:0] zext_ln58_7_fu_2144_p1;
wire   [11:0] add_ln58_4_fu_2150_p2;
wire   [11:0] zext_ln58_6_fu_2141_p1;
wire  signed [12:0] sext_ln58_5_fu_2165_p1;
wire  signed [12:0] sext_ln58_2_fu_2162_p1;
wire  signed [13:0] sext_ln58_6_fu_2177_p1;
wire   [13:0] zext_ln58_10_fu_2174_p1;
reg    grp_fu_209_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to4;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [18:0] grp_fu_209_p00;
wire   [15:0] mul_ln42_1_fu_190_p00;
wire   [15:0] mul_ln42_2_fu_196_p00;
wire   [15:0] mul_ln42_fu_212_p00;
wire   [17:0] mul_ln73_176_fu_202_p00;
wire   [16:0] mul_ln73_177_fu_213_p00;
wire   [17:0] mul_ln73_178_fu_199_p00;
wire   [16:0] mul_ln73_179_fu_189_p00;
wire   [16:0] mul_ln73_180_fu_186_p00;
wire   [16:0] mul_ln73_181_fu_206_p00;
wire   [16:0] mul_ln73_183_fu_191_p00;
wire   [16:0] mul_ln73_fu_214_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 res_0_preg = 14'd0;
end

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U6600(
    .din0(mul_ln73_180_fu_186_p0),
    .din1(mul_ln73_180_fu_186_p1),
    .dout(mul_ln73_180_fu_186_p2)
);

JetTagger_mul_9ns_8s_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 17 ))
mul_9ns_8s_17_1_1_U6601(
    .din0(mul_ln73_179_fu_189_p0),
    .din1(mul_ln73_179_fu_189_p1),
    .dout(mul_ln73_179_fu_189_p2)
);

JetTagger_mul_9ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_9ns_8ns_16_1_1_U6602(
    .din0(mul_ln42_1_fu_190_p0),
    .din1(mul_ln42_1_fu_190_p1),
    .dout(mul_ln42_1_fu_190_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U6603(
    .din0(mul_ln73_183_fu_191_p0),
    .din1(mul_ln73_183_fu_191_p1),
    .dout(mul_ln73_183_fu_191_p2)
);

JetTagger_mul_9ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_9ns_8ns_16_1_1_U6604(
    .din0(mul_ln42_2_fu_196_p0),
    .din1(mul_ln42_2_fu_196_p1),
    .dout(mul_ln42_2_fu_196_p2)
);

JetTagger_mul_9ns_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9ns_9s_18_1_1_U6605(
    .din0(mul_ln73_178_fu_199_p0),
    .din1(mul_ln73_178_fu_199_p1),
    .dout(mul_ln73_178_fu_199_p2)
);

JetTagger_mul_9ns_9s_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 18 ))
mul_9ns_9s_18_1_1_U6606(
    .din0(mul_ln73_176_fu_202_p0),
    .din1(mul_ln73_176_fu_202_p1),
    .dout(mul_ln73_176_fu_202_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U6607(
    .din0(mul_ln73_181_fu_206_p0),
    .din1(mul_ln73_181_fu_206_p1),
    .dout(mul_ln73_181_fu_206_p2)
);

JetTagger_mul_9ns_11ns_19_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_2_1_U6608(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_209_p0),
    .din1(grp_fu_209_p1),
    .ce(grp_fu_209_ce),
    .dout(grp_fu_209_p2)
);

JetTagger_mul_9ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_9ns_8ns_16_1_1_U6609(
    .din0(mul_ln42_fu_212_p0),
    .din1(mul_ln42_fu_212_p1),
    .dout(mul_ln42_fu_212_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U6610(
    .din0(mul_ln73_177_fu_213_p0),
    .din1(mul_ln73_177_fu_213_p1),
    .dout(mul_ln73_177_fu_213_p2)
);

JetTagger_mul_9ns_9ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 17 ))
mul_9ns_9ns_17_1_1_U6611(
    .din0(mul_ln73_fu_214_p0),
    .din1(mul_ln73_fu_214_p1),
    .dout(mul_ln73_fu_214_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_0_preg <= 14'd0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
            res_0_preg <= add_ln58_12_fu_2180_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln58_10_reg_2343 <= add_ln58_10_fu_2115_p2;
        add_ln58_10_reg_2343_pp0_iter3_reg <= add_ln58_10_reg_2343;
        add_ln58_11_reg_2363 <= add_ln58_11_fu_2168_p2;
        add_ln58_1_reg_2323 <= add_ln58_1_fu_2063_p2;
        add_ln58_1_reg_2323_pp0_iter3_reg <= add_ln58_1_reg_2323;
        add_ln58_2_reg_2328 <= add_ln58_2_fu_2072_p2;
        add_ln58_2_reg_2328_pp0_iter3_reg <= add_ln58_2_reg_2328;
        add_ln58_3_reg_2348 <= add_ln58_3_fu_2124_p2;
        add_ln58_5_reg_2358 <= add_ln58_5_fu_2156_p2;
        add_ln58_6_reg_2333 <= add_ln58_6_fu_2083_p2;
        add_ln58_7_reg_2338 <= add_ln58_7_fu_2096_p2;
        add_ln58_8_reg_2353 <= add_ln58_8_fu_2135_p2;
        tmp_3_reg_2293_pp0_iter2_reg <= tmp_3_reg_2293;
        tmp_4_reg_2318 <= {{grp_fu_209_p2[18:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_read1115_reg_2223 <= p_read11;
        p_read1516_reg_2218 <= p_read15;
        p_read1817_reg_2212 <= p_read18;
        p_read1918_reg_2207 <= p_read19;
        p_read2219_reg_2202 <= p_read22;
        p_read2520_reg_2197 <= p_read25;
        p_read2821_reg_2192 <= p_read28;
        p_read311_reg_2243 <= p_read3;
        p_read3122_reg_2187 <= p_read31;
        p_read412_reg_2238 <= p_read4;
        p_read613_reg_2233 <= p_read6;
        p_read914_reg_2228 <= p_read9;
        p_read_2527_reg_2248 <= p_read;
        tmp_1_reg_2263 <= {{mul_ln73_177_fu_213_p2[16:8]}};
        tmp_2_reg_2278 <= {{mul_ln73_180_fu_186_p2[16:8]}};
        tmp_3_reg_2293 <= {{mul_ln42_fu_212_p2[15:8]}};
        tmp_6_reg_2308 <= {{mul_ln42_1_fu_190_p2[15:8]}};
        tmp_8_reg_2313 <= {{mul_ln42_2_fu_196_p2[15:8]}};
        tmp_reg_2253 <= {{mul_ln73_fu_214_p2[16:8]}};
        trunc_ln42_1_reg_2268 <= {{mul_ln73_178_fu_199_p2[17:8]}};
        trunc_ln42_2_reg_2273 <= {{mul_ln73_179_fu_189_p2[16:8]}};
        trunc_ln42_3_reg_2288 <= {{add_ln73_fu_1956_p2[17:8]}};
        trunc_ln42_s_reg_2258 <= {{mul_ln73_176_fu_202_p2[17:8]}};
        trunc_ln70_2_reg_2283 <= {{mul_ln73_181_fu_206_p2[16:8]}};
        trunc_ln70_6_reg_2303 <= {{mul_ln73_183_fu_191_p2[16:8]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to4 = 1'b1;
    end else begin
        ap_idle_pp0_0to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to4 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_209_ce = 1'b1;
    end else begin
        grp_fu_209_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        res_0 = add_ln58_12_fu_2180_p2;
    end else begin
        res_0 = res_0_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        res_0_ap_vld = 1'b1;
    end else begin
        res_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln58_10_fu_2115_p2 = ($signed(sext_ln58_4_fu_2112_p1) + $signed(sext_ln58_3_fu_2108_p1));

assign add_ln58_11_fu_2168_p2 = ($signed(sext_ln58_5_fu_2165_p1) + $signed(sext_ln58_2_fu_2162_p1));

assign add_ln58_12_fu_2180_p2 = ($signed(sext_ln58_6_fu_2177_p1) + $signed(zext_ln58_10_fu_2174_p1));

assign add_ln58_1_fu_2063_p2 = (zext_ln58_2_fu_2060_p1 + zext_ln58_1_fu_2057_p1);

assign add_ln58_2_fu_2072_p2 = (trunc_ln42_3_reg_2288 + zext_ln58_fu_2069_p1);

assign add_ln58_3_fu_2124_p2 = (tmp_4_reg_2318 + zext_ln58_8_fu_2121_p1);

assign add_ln58_4_fu_2150_p2 = (zext_ln58_9_fu_2147_p1 + zext_ln58_7_fu_2144_p1);

assign add_ln58_5_fu_2156_p2 = (add_ln58_4_fu_2150_p2 + zext_ln58_6_fu_2141_p1);

assign add_ln58_6_fu_2083_p2 = (zext_ln58_4_fu_2080_p1 + zext_ln58_3_fu_2077_p1);

assign add_ln58_7_fu_2096_p2 = ($signed(sext_ln58_fu_2092_p1) + $signed(zext_ln58_11_fu_2089_p1));

assign add_ln58_8_fu_2135_p2 = ($signed(sext_ln58_1_fu_2132_p1) + $signed(zext_ln58_5_fu_2129_p1));

assign add_ln58_9_fu_2102_p2 = ($signed(sext_ln70_fu_2035_p1) + $signed(sext_ln70_1_fu_2038_p1));

assign add_ln58_fu_2051_p2 = ($signed(lshr_ln42_cast_fu_2032_p1) + $signed(10'd996));

assign add_ln73_fu_1956_p2 = (zext_ln73_fu_1941_p1 + zext_ln73_208_fu_1952_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_done_reg == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_209_p0 = grp_fu_209_p00;

assign grp_fu_209_p00 = p_read2219_reg_2202;

assign grp_fu_209_p1 = 19'd673;

assign lshr_ln42_cast_fu_2032_p1 = tmp_reg_2253;

assign mul_ln42_1_fu_190_p0 = mul_ln42_1_fu_190_p00;

assign mul_ln42_1_fu_190_p00 = p_read2821_reg_2192;

assign mul_ln42_1_fu_190_p1 = 16'd109;

assign mul_ln42_2_fu_196_p0 = mul_ln42_2_fu_196_p00;

assign mul_ln42_2_fu_196_p00 = p_read3122_reg_2187;

assign mul_ln42_2_fu_196_p1 = 16'd106;

assign mul_ln42_fu_212_p0 = mul_ln42_fu_212_p00;

assign mul_ln42_fu_212_p00 = p_read1918_reg_2207;

assign mul_ln42_fu_212_p1 = 16'd100;

assign mul_ln73_176_fu_202_p0 = mul_ln73_176_fu_202_p00;

assign mul_ln73_176_fu_202_p00 = p_read311_reg_2243;

assign mul_ln73_176_fu_202_p1 = 18'd261987;

assign mul_ln73_177_fu_213_p0 = mul_ln73_177_fu_213_p00;

assign mul_ln73_177_fu_213_p00 = p_read412_reg_2238;

assign mul_ln73_177_fu_213_p1 = 17'd238;

assign mul_ln73_178_fu_199_p0 = mul_ln73_178_fu_199_p00;

assign mul_ln73_178_fu_199_p00 = p_read613_reg_2233;

assign mul_ln73_178_fu_199_p1 = 18'd261980;

assign mul_ln73_179_fu_189_p0 = mul_ln73_179_fu_189_p00;

assign mul_ln73_179_fu_189_p00 = p_read914_reg_2228;

assign mul_ln73_179_fu_189_p1 = 17'd130995;

assign mul_ln73_180_fu_186_p0 = mul_ln73_180_fu_186_p00;

assign mul_ln73_180_fu_186_p00 = p_read1115_reg_2223;

assign mul_ln73_180_fu_186_p1 = 17'd131;

assign mul_ln73_181_fu_206_p0 = mul_ln73_181_fu_206_p00;

assign mul_ln73_181_fu_206_p00 = p_read1516_reg_2218;

assign mul_ln73_181_fu_206_p1 = 17'd133;

assign mul_ln73_183_fu_191_p0 = mul_ln73_183_fu_191_p00;

assign mul_ln73_183_fu_191_p00 = p_read2520_reg_2197;

assign mul_ln73_183_fu_191_p1 = 17'd175;

assign mul_ln73_fu_214_p0 = mul_ln73_fu_214_p00;

assign mul_ln73_fu_214_p00 = p_read_2527_reg_2248;

assign mul_ln73_fu_214_p1 = 17'd172;

assign sext_ln58_1_fu_2132_p1 = $signed(add_ln58_7_reg_2338);

assign sext_ln58_2_fu_2162_p1 = $signed(add_ln58_8_reg_2353);

assign sext_ln58_3_fu_2108_p1 = $signed(add_ln58_9_fu_2102_p2);

assign sext_ln58_4_fu_2112_p1 = $signed(trunc_ln42_2_reg_2273);

assign sext_ln58_5_fu_2165_p1 = $signed(add_ln58_10_reg_2343_pp0_iter3_reg);

assign sext_ln58_6_fu_2177_p1 = $signed(add_ln58_11_reg_2363);

assign sext_ln58_fu_2092_p1 = $signed(add_ln58_fu_2051_p2);

assign sext_ln70_1_fu_2038_p1 = $signed(trunc_ln42_1_reg_2268);

assign sext_ln70_fu_2035_p1 = $signed(trunc_ln42_s_reg_2258);

assign shl_ln73_50_fu_1934_p3 = {{p_read1817_reg_2212}, {8'd0}};

assign shl_ln73_51_fu_1945_p3 = {{p_read1817_reg_2212}, {1'd0}};

assign zext_ln58_10_fu_2174_p1 = add_ln58_5_reg_2358;

assign zext_ln58_11_fu_2089_p1 = tmp_8_reg_2313;

assign zext_ln58_1_fu_2057_p1 = tmp_1_reg_2263;

assign zext_ln58_2_fu_2060_p1 = tmp_2_reg_2278;

assign zext_ln58_3_fu_2077_p1 = trunc_ln70_6_reg_2303;

assign zext_ln58_4_fu_2080_p1 = tmp_6_reg_2308;

assign zext_ln58_5_fu_2129_p1 = add_ln58_6_reg_2333;

assign zext_ln58_6_fu_2141_p1 = add_ln58_1_reg_2323_pp0_iter3_reg;

assign zext_ln58_7_fu_2144_p1 = add_ln58_2_reg_2328_pp0_iter3_reg;

assign zext_ln58_8_fu_2121_p1 = tmp_3_reg_2293_pp0_iter2_reg;

assign zext_ln58_9_fu_2147_p1 = add_ln58_3_reg_2348;

assign zext_ln58_fu_2069_p1 = trunc_ln70_2_reg_2283;

assign zext_ln73_208_fu_1952_p1 = shl_ln73_51_fu_1945_p3;

assign zext_ln73_fu_1941_p1 = shl_ln73_50_fu_1934_p3;

endmodule //JetTagger_dense_latency_ap_ufixed_9_0_4_0_0_ap_fixed_16_6_5_3_0_config22_s
